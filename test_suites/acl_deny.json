{
    "Name":"TA 1280 ACL Deny",
    "Skip":false,
    "Tests": [
        {
            "Name":"Test 1: Create ACL Profiles",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: User can create ACL Profile with name `acl1`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"acl-profile",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Template": "aclprofile.template",
                        "Defaults": "aclprofile.defaults",
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"acl1\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"acl1\""
                            },
                            {
                                "Key":"tags",
                                "Value":"[\"test-deny\"]"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-acl-block\""
                            },
                            {
                                "Key":"deny",
                                "Value":"[\"all\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create ACL Profile with name `acl2`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"acl-profile",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Template": "aclprofile.template",
                        "Defaults": "aclprofile.defaults",
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"acl2\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"acl2\""
                            },
                            {
                                "Key":"tags",
                                "Value":"[\"123\"]"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-acl-block\""
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 3: Create security policy",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: User can create security policy `test-sp`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"security-policy",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"map",
                                "Value":"[{\"id\": \"__default_entry__\",\"match\": \"/\",\"name\": \"default\",\"acl_profile\": \"__acldefault__\",\"content_filter_profile\": \"__defaultcontentfilter__\",\"backend_id\": \"__default__\",\"acl_active\": false, \"content_filter_active\": false,\"limit_ids\": [],\"cloud_functions\": []},{\"id\": \"test\",\"match\": \"/test\",\"name\": \"test\",\"acl_profile\": \"acl1\",\"content_filter_profile\": \"__defaultcontentfilter__\",\"backend_id\": \"__default__\",\"acl_active\": true,\"content_filter_active\": false,\"limit_ids\": [],\"cloud_functions\": []},{\"id\": \"test2\",\"match\": \"/test2\",\"name\": \"test2\",\"acl_profile\": \"acl2\",\"content_filter_profile\": \"__defaultcontentfilter__\",\"backend_id\": \"__default__\",\"acl_active\": true,\"content_filter_active\": false,\"limit_ids\": [],\"cloud_functions\": []}]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 4: Create server group and publish",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Create new server group 'test.site' ",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"server-group",
                        "Path":"test-site/"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"server_names",
                                "Value":"[\"test.site\"]"
                            },
                            {
                                "Key":"security_policy",
                                "Value":"\"test-sp\""
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"id",
                                "Value":"test-site"
                            }
                        ]
                    }
                },
                {
                    "ID":"publish-changes",
                    "Skip":false
                },
                {
                    "ID":"wait-for-publish",
                    "Skip":false
                }
            ]
        },
        {
            "Name": "Test 5: Send traffics",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Send Traffic to path `/test`",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Expected": {
                        "Code": "472",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic to path `/test2`",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test2"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        },
        {
            "Name": "Test 6: Wait for logs",
            "Skip": false,
            "Steps": [
                {
                    "ID": "wait-for-logs",
                    "Skip": false
                }
            ]
        },
        {
            "Name": "Test 7: Check logs from path '/test'",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs from path '/test'",
                    "Skip": false,
                    "API": {
                        "Base": "logs",
                        "Path": ""
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /test, status = 472, timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "Headers": [
                            {
                                "Key": "Server",
                                "Value": "rhino-core-shield"
                            }
                        ],
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:472"
                            },
                            {
                                "Key": "data/results/0/reason",
                                "Value": "Block - acl Deny [\"all\"] - acl1 - [request]"
                            }
                        ]
                    }
                }
            ]
        }
    ]
}