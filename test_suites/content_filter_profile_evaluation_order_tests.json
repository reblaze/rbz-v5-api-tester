{
    "Name":"TA 1492 Content filter profile evaluation order tests",
    "Skip":false,
    "Tests":[
        {
            "Name":"Test 1: Create content filter rules and filter profiles ",
            "Skip":false,
            "Steps":[
                {
                    "Name": "Step: Create filter rule with name 'test-active'",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-rule",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test-active\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test-active\""
                            },
                            {
                                "Key": "category",
                                "Value": "\"test-category\""
                            },
                            {
                                "Key": "subcategory",
                                "Value": "\"test-subcategory\""
                            },
                            {
                                "Key": "operand",
                                "Value": "\"test-active\""
                            },
                            {
                                "Key": "risk",
                                "Value": "1"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create filter rule with name 'test-report'",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-rule",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test-report\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test-report\""
                            },
                            {
                                "Key": "category",
                                "Value": "\"test-category\""
                            },
                            {
                                "Key": "subcategory",
                                "Value": "\"test-subcategory\""
                            },
                            {
                                "Key": "operand",
                                "Value": "\"test-report\""
                            },
                            {
                                "Key": "risk",
                                "Value": "1"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new content filter profile with name `test-profile-json`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-profile",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test-profile-json\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test-profile-json\""
                            },
                            {
                                "Key": "ignore_body",
                                "Value": "false"
                            },
                            {
                                "Key": "content_type",
                                "Value": "[\"json\"]"
                            }

                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new content filter profile with name `test-profile-decod_base64`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-profile",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test-profile-decod_base64\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test-profile-decod_base64\""
                            },
                            {
                                "Key": "ignore_body",
                                "Value": "false"
                            },
                            {
                                "Key": "content_type",
                                "Value": "[\"json\"]"
                            },
                            {
                                "Key":"active",
                                "Value":"[\"cf-rule-risk:5\",\"cf-rule-risk:4\",\"cf-rule-risk:3\",\"cf-rule-subcategory:libinjection-xss\"]"
                            },
                            {
                                "Key": "decoding",
                                "Value": "{\"base64\": true, \"dual\": false, \"html\": false, \"unicode\": false}"
                            }

                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 2: Create security policy ",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: User can create security policy with attached content filter profiles",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"security-policy",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"map",
                                "Value":"[{\"id\":\"__root_entry__\",\"name\":\"__root__\",\"match\":\"^/(\\\\W.*)?$\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"__default_entry__\",\"name\":\"__default__\",\"match\":\"/\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]}, {\"id\": \"test-cfp-json\", \"name\": \"test-cfp-json\", \"match\": \"/test-cfp-json\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test-profile-json\", \"content_filter_active\": true, \"limit_ids\": []}, {\"id\": \"test-cfp-decod-base64\", \"name\": \"test-cfp-decod-base64\", \"match\": \"/test-cfp-decod-base64\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test-profile-decod_base64\", \"content_filter_active\": true, \"limit_ids\": []}]"

                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: Create new server group 'test.site' ",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"server-group",
                        "Path":"test-site/"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"server_names",
                                "Value":"[\"test.site\"]"
                            },
                            {
                                "Key":"security_policy",
                                "Value":"\"test-sp\""
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"id",
                                "Value":"test-site"
                            }
                        ]
                    }
                },
                {
                    "ID":"publish-changes",
                    "Skip":false
                },
                {
                    "ID":"wait-for-publish",
                    "Skip":false
                }
            ]
        },
        {
            "Name": "Test 3: Send traffics ",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Send Traffic 1 to path 'test-alphanumeric-false', request '?a=alphanumtestoperand'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-alphanumeric-false"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"a",
                            "Value":"alphanumtestoperand"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 2 to path 'test-alphanumeric-true', request '?a=alphanumtestoperand'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-alphanumeric-true"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"a",
                            "Value":"alphanumtestoperand"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        },
        {
            "Name": "Test 4: Wait for logs",
            "Skip": true,
            "Steps": [
                {
                    "ID": "wait-for-logs",
                    "Skip": false
                }
            ]
        },
        {
            "Name": "Test 5: Check logs from path /test-alphanumeric-false",
            "Skip": true,
            "Steps": [
                {
                    "Name": "Step: Get Logs from path /test-alphanumeric-false",
                    "Skip": false,
                    "API": {
                        "Base": "logs",
                        "Path": ""
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /test-alphanumeric-false, status = 473, timestamp between @@NOW(-5minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "Headers": [
                            {
                                "Key": "Server",
                                "Value": "rhino-core-shield"
                            }
                        ],
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "action:content-filter-block"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "content-filter-test"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "action:content-filter-block"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "cf-rule-category:test-category"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "cf-rule-subcategory:test-subcategory"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "contentfiltername:test-cfp-ignore-alphanumeric-false"
                            }
                        ]
                    }
                }
            ]
        }
    ]
}