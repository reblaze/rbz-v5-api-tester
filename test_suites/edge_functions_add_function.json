{
    "Name":"TA 1314 Edge function add function",
    "Skip":false,
    "Tests":[
        {
            "Name":"Create content filter profiles",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Create content filter profile 'test_cfp_sig'",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"content-filter-profile",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test_cfp_sig\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test_cfp_sig\""
                            },
                            {
                                "Key":"ignore_body",
                                "Value":"false"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Create content filter profile 'test_cfp_max_length'",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"content-filter-profile",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test_cfp_max_length\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test_cfp_max_length\""
                            },
                            {
                                "Key":"ignore_body",
                                "Value":"false"
                            },
                            {
                                "Key": "args",
                                "Value": "{\"enable_max_count\": true, \"enable_max_length\": true, \"max_count\": 512, \"max_length\": 5,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Create content filter profile 'test_cfp_max_count'",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"content-filter-profile",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test_cfp_max_count\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test_cfp_max_count\""
                            },
                            {
                                "Key":"ignore_body",
                                "Value":"false"
                            },
                            {
                                "Key": "args",
                                "Value": "{\"enable_max_count\": true, \"enable_max_length\": true, \"max_count\": 1, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Setup proxy template and server group",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Create Proxy Template",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"proxy-template",
                        "Path":"proxy-template/"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"proxy-template\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"proxy-template\""
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"id",
                                "Value":"proxy-template"
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create security policy `test-sp`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"security-policy",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"map",
                                "Value":"[{\"id\":\"__root_entry__\",\"name\":\"__root__\",\"match\":\"^/(\\\\W.*)?$\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"__default_entry__\",\"name\":\"__default__\",\"match\":\"/\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]}, {\"id\": \"test-sig\", \"name\": \"test-sig\", \"match\": \"/test-sig\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test_cfp_sig\", \"content_filter_active\": false, \"limit_ids\": []}, {\"id\": \"test-length\", \"name\": \"test-length\", \"match\": \"/test-length\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test_cfp_max_length\", \"content_filter_active\": false, \"limit_ids\": []}, {\"id\": \"test-max-count\", \"name\": \"test-max-count\", \"match\": \"/test-max-count\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test_cfp_max_count\", \"content_filter_active\": false, \"limit_ids\": []}]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Create server group 'test.site' with proxy template 'proxy-template' and security policy 'test-sp' ",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"server-group",
                        "Path":"test-site/"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"server_names",
                                "Value":"[\"test.site\"]"
                            },
                            {
                                "Key":"security_policy",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"proxy_template",
                                "Value":"\"proxy-template\""
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"id",
                                "Value":"test-site"
                            }
                        ]
                    }
                },
                {
                    "ID":"publish-changes",
                    "Skip":false
                },
                {
                    "ID":"wait-for-publish",
                    "Skip":false
                }
            ]
        },
        {
            "Name":"Send requests",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Send request 1: 1 text file with sig",
                    "Skip": false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/test-sig"
                    },
                    "Method":"POST",
                    "Headers":[
                        {
                            "Key":"Host",
                            "Value":"test.site"
                        }
                    ],
                    "Files":[
                        {
                            "Key":"file1",
                            "Value":"./test_files/step4.txt"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                },
                {
                    "Name":"Send request 2: 1 binary file",
                    "Skip": false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/test-sig"
                    },
                    "Method":"POST",
                    "Headers":[
                        {
                            "Key":"Host",
                            "Value":"test.site"
                        }
                    ],
                    "Files":[
                        {
                            "Key":"file1",
                            "Value":"./test_files/1.png"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                },
                {
                    "Name":"Send request 3: several files with sig",
                    "Skip": false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/test-sig"
                    },
                    "Method":"POST",
                    "Headers":[
                        {
                            "Key":"Host",
                            "Value":"test.site"
                        }
                    ],
                    "Files":[
                        {
                            "Key":"file1",
                            "Value":"./test_files/step4.txt"
                        },
                        {
                            "Key":"file2",
                            "Value":"./test_files/step2.txt"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                },
                {
                    "Name":"Send request 4: file with sig",
                    "Skip": false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/test-sig"
                    },
                    "Method":"POST",
                    "Headers":[
                        {
                            "Key":"Host",
                            "Value":"test.site"
                        }
                    ],
                    "Files":[
                        {
                            "Key":"file1",
                            "Value":"./test_files/step4.txt"
                        }
                    ],
                    "Arguments":
                    [
                        {
                            "Key": "data",
                            "Value": "<area>"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name":"Send request 5: arg with sig",
                    "Skip": false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/test-sig"
                    },
                    "Method":"POST",
                    "Headers":[
                        {
                            "Key":"Host",
                            "Value":"test.site"
                        }
                    ],
                    "Files":[
                        {
                            "Key":"file1",
                            "Value":"./test_files/step4.txt"
                        }
                    ],
                    "Arguments":
                    [
                        {
                            "Key": "arg",
                            "Value": "data=<area>"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name":"Send request 6: file + max length",
                    "Skip": false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/test-length"
                    },
                    "Method":"POST",
                    "Headers":[
                        {
                            "Key":"Host",
                            "Value":"test.site"
                        }
                    ],
                    "Files":[
                        {
                            "Key":"file1",
                            "Value":"./test_files/step4.txt"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                },
                {
                    "Name":"Send request 7: file + max count",
                    "Skip": false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/test-max-count"
                    },
                    "Method":"POST",
                    "Headers":[
                        {
                            "Key":"Host",
                            "Value":"test.site"
                        }
                    ],
                    "Files":[
                        {
                            "Key":"file1",
                            "Value":"./test_files/step4.txt"
                        },
                        {
                            "Key":"file2",
                            "Value":"./test_files/step2.txt"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
         {
            "Name": "Test: Wait for logs",
            "Skip": false,
            "Steps": [
                {
                    "ID": "wait-for-logs",
                    "Skip": false
                }
            ]
        },
        {
            "Name": "Test: Check logs",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs from path /'test-sig'",
                    "Skip": false,
                    "API": {
                        "Base": "logs",
                        "Path": ""
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /test-sig, status = 200, timestamp between @@NOW(-5minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "cf-rule-name:200039"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "file-skipped:step4-txt"
                            },
                            {
                                "Key": "data/results/0/logs/*",
                                "Value": "Skipping inspection of file step4.txt from argument file1"
                            },
                            {
                                "Key": "data/results/1/tags/*",
                                "Value": "cf-rule-name:200039"
                            },
                            {
                                "Key": "data/results/1/tags/*",
                                "Value": "file-skipped:step4-txt"
                            },
                            {
                                "Key": "data/results/1/logs/*",
                                "Value": "Skipping inspection of file step4.txt from argument file1"
                            },
                            {
                                "Key": "data/results/2/tags/*",
                                "Value": "file-skipped:step4-txt"
                            },
                            {
                                "Key": "data/results/2/logs/0",
                                "Value": "Skipping inspection of file step4.txt from argument file1"
                            },
                            {
                                "Key": "data/results/2/logs/1",
                                "Value": "Skipping inspection of file step2.txt from argument file2"
                            },
                            {
                                "Key": "data/results/3/tags/*",
                                "Value": "file-skipped:1-png"
                            },
                            {
                                "Key": "data/results/3/logs/0",
                                "Value": "Skipping inspection of file 1.png from argument file1"
                            },
                            {
                                "Key": "data/results/4/tags/*",
                                "Value": "file-skipped:step4-txt"
                            },
                            {
                                "Key": "data/results/4/logs/0",
                                "Value": "Skipping inspection of file step4.txt from argument file1"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Get Logs from path /'test-length'",
                    "Skip": false,
                    "API": {
                        "Base": "logs",
                        "Path": ""
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /test-length, status = 200, timestamp between @@NOW(-5minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "file-skipped:step4-txt"
                            },
                            {
                                "Key": "data/results/0/logs/*",
                                "Value": "Skipping inspection of file step4.txt from argument file1"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Get Logs from path /'test-max-count'",
                    "Skip": false,
                    "API": {
                        "Base": "logs",
                        "Path": ""
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /test-max-count, status = 200, timestamp between @@NOW(-5minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "file-skipped:step4-txt"
                            },
                            {
                                "Key": "data/results/0/logs/0",
                                "Value": "Skipping inspection of file step4.txt from argument file1"
                            },
                            {
                                "Key": "data/results/0/logs/1",
                                "Value": "Skipping inspection of file step2.txt from argument file2"
                            }
                        ]
                    }
                }
            ]
        }
    ]
}