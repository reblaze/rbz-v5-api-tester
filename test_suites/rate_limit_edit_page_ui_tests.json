{
    "Name": "TA 1302 Rate limit edit page UI tests",
    "Skip": true,
    "Tests": [
        {
            "Name": "Step 1 - Create a rate limit from the list page",
            "Skip": false,
            "Steps": [
                {
                    "Name": "User can create a rate limit with default values",
                    "Skip": false,
                    "GenerateID": true,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": []
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Step 2 - Name field validations",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can create a rate limit with text name",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"testname\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_tester\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can create a rate limit with long name",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_tester_a\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can create a rate limit with special chars name",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"!@#$%^&*()<>'_-.\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_tester_b\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can create a rate limit with trimmed name",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"  trimmedname  \""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_tester_c\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can check trimmedname",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "rate-limits",
                        "Path": ""
                    },
                    "Method" :"GET",
                    "Expected":
                    {
                        "Code": "200",
                        "Type": "json",
						"Single": false,
                        "MultipleResults":
                        [
                            [
                                {
                                    "Key": "name",
                                    "Value": "trimmedname"
                                },
                                {
                                    "Key": "id",
                                    "Value": "api_tester_c"
                                }
                            ]
                        ]
                    }
                },
                {
                    "Name": "User can not create a rate limit with empty name",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_tester_d\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "content",
                        "Single": true,
                        "Text": "b\"schema mismatched: \\n'' is too short\\n\\nFailed validating 'minLength' in schema['properties']['name']:\\n    {'description': 'Name of entity shown in UI',\\n     'minLength': 1,\\n     'title': 'Name',\\n     'type': 'string'}\\n\\nOn instance['name']:\\n    ''\""
                    }
                },
                {
                    "Name": "User can not create a rate limit with the same name",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"testname\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_tester_e\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "409",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'409 Conflict: entry with name testname already exists in document [ratelimits]'"
                    }
                }
            ]
        },
        {
            "Name": "Step 3 - Count by validations",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can create rate limit with one rate limit",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"counta\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"count_a\""
                            },
                            {
                                "Key": "key",
                                "Value": "[{\"attrs\":\"securitypolicyname\"}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User cannot delete Count by keys when we have only one",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "count_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                                {
                                "Key": "name",
                                "Value": "\"counta\""
                                },
                                {
                                "Key": "id",
                                "Value": "\"count_a\""
                                },
                                {
                                    "Key": "key",
                                    "Value": "[]"
                                }
                        ]
                    },
                     "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "User can add more than one Count by keys",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "count_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"counta\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"count_a\""
                            },
                            {
                                "Key": "key",
                                "Value": "[{\"attrs\":\"securitypolicyentryname\"},{\"attrs\":\"session\"}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Check that count by `header` cannot be empty",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "count_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"counta\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"count_a\""
                            },
                            {
                                "Key": "key",
                                "Value": "[{\"headers\":\"\"}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Check that count by `cookie` cannot be empty",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "count_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"counta\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"count_a\""
                            },
                            {
                                "Key": "key",
                                "Value": "[{\"cookies\":\"\"}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                    }
                },
                {
                    "Name": "Check that count by `argument` cannot be empty",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "count_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"counta\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"count_a\""
                            },
                            {
                                "Key": "key",
                                "Value": "[{\"arguments\":\"\"}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "User cannot add same key twice",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "count_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"counta\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"count_a\""
                            },
                            {
                                "Key": "key",
                                "Value": "[{\"attrs\":\"securitypolicyentryname\"}, {\"attrs\":\"securitypolicyentryname\"}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        },
        {
            "Name": "Step 4 - Timeframe validations:",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can create a rate limit`s timeframe with positive number",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"timeframepositive\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_tester_f\""
                            },
                            {
                                "Key": "timeframe",
                                "Value": "15"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User cannot create a rate limit`s timeframe with '0' number",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"timeframezero\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_tester_g\""
                            },
                            {
                                "Key": "timeframe",
                                "Value": "0"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User cannot create a rate limit`s timeframe with text value",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"timeframetext\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_tester_t\""
                            },
                            {
                                "Key": "timeframe",
                                "Value": "\"text\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "content",
                        "Single": true,
                        "Text": "b\"schema mismatched: \\n'text' is not of type 'integer'\\n\\nFailed validating 'type' in schema['properties']['timeframe']:\\n    {'description': 'The time in which to limit the requests according to '\\n                    'the threshold',\\n     'title': 'Time To Limit',\\n     'type': 'integer'}\\n\\nOn instance['timeframe']:\\n    'text'\""
                    }
                },
                {
                    "Name": "User cannot create a rate limit`s timeframe with negative number",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"timeframenegative\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_tester_i\""
                            },
                            {
                                "Key": "timeframe",
                                "Value": "-10"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "User cannot create a rate limit`s timeframe with decimal number",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"timeframedecimal\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_tester_j\""
                            },
                            {
                                "Key": "timeframe",
                                "Value": "1.25"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "content",
                        "Single": true,
                        "Text": "b\"schema mismatched: \\n1.25 is not of type 'integer'\\n\\nFailed validating 'type' in schema['properties']['timeframe']:\\n    {'description': 'The time in which to limit the requests according to '\\n                    'the threshold',\\n     'title': 'Time To Limit',\\n     'type': 'integer'}\\n\\nOn instance['timeframe']:\\n    1.25\""
                    }
                },
                {
                    "Name": "User cannot create a rate limit`s timeframe with empty value",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"timeframe\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_tester_k\""
                            },
                            {
                                "Key": "timeframe",
                                "Value": "\"\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "content",
                        "Single": true,
                        "Text": "b\"schema mismatched: \\n'' is not of type 'integer'\\n\\nFailed validating 'type' in schema['properties']['timeframe']:\\n    {'description': 'The time in which to limit the requests according to '\\n                    'the threshold',\\n     'title': 'Time To Limit',\\n     'type': 'integer'}\\n\\nOn instance['timeframe']:\\n    ''\""
                    }
                }
            ]
        },
        {
            "Name": "Step 5 - Action",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can check action`s types",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "actions",
                        "Path": ""
                    },
                    "Method" :"GET",
                    "Expected":
                    {
                        "Code": "200",
                        "Type": "json",
						"Single": false,
                        "MultipleResults":
                        [
                            [
                                {
                                    "Key": "id",
                                    "Value": "action-challenge"
                                },
                                {
                                    "Key": "name",
                                    "Value": "challenge"
                                }
                            ],
                            [
                                {
                                    "Key": "id",
                                    "Value": "action-monitor"
                                },
                                {
                                    "Key": "name",
                                    "Value": "monitor (tag only)"
                                }
                            ],
                            [
                                {
                                    "Key": "id",
                                    "Value": "action-rate-limit-block"
                                },
                                {
                                    "Key": "name",
                                    "Value": "Rate-limit block"
                                }
                            ],
                            [
                                {
                                    "Key": "id",
                                    "Value": "action-reblaze-feed-block"
                                },
                                {
                                    "Key": "name",
                                    "Value": "Reblaze feed block"
                                }
                            ],
                            [
                                {
                                    "Key": "id",
                                    "Value": "action-https-redirect"
                                },
                                {
                                    "Key": "name",
                                    "Value": "https redirect"
                                }
                            ]
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Step 6 - Ban action timeframe",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User cannot create a ban with '0' value",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"banzero\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"ban_a\""
                            },
                            {
                                "Key": "is_action_ban",
                                "Value": "true"
                            },
                            {
                                "Key": "ttl",
                                "Value": "0"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "content",
                        "Single": true,
                        "Text":  "b\"schema mismatched: \\n0 is less than the minimum of 1\\n\\nFailed validating 'minimum' in schema['properties']['ttl']:\\n    {'description': 'Duration time for ban action',\\n     'minimum': 1,\\n     'title': 'Ban TTL',\\n     'type': 'integer'}\\n\\nOn instance['ttl']:\\n    0\""
                    }
                },
                {
                    "Name": "User cannot create a ban with '1' value",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"banone\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"ban_b\""
                            },
                            {
                                "Key": "is_action_ban",
                                "Value": "true"
                            },
                            {
                                "Key": "ttl",
                                "Value": "1"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "content",
                        "Single": true,
                        "Text":  "b'ttl can only be a multiple of 60'"
                    }
                },
                {
                    "Name": "User can create a ban with '1440' value",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"banforty\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"ban_c\""
                            },
                            {
                                "Key": "is_action_ban",
                                "Value": "true"
                            },
                            {
                                "Key": "ttl",
                                "Value": "1440"
                            }

                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User cannot create a ban with '1441' value",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"banfortyone\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"ban_d\""
                            },
                            {
                                "Key": "is_action_ban",
                                "Value": "true"
                            },
                            {
                                "Key": "ttl",
                                "Value": "1441"
                            }

                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "content",
                        "Single": true,
                        "Text":  "b'ttl can only be a multiple of 60'"
                    }
                },
                {
                    "Name": "User cannot create a ban with empty value",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"banempty\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"ban_e\""
                            },
                            {
                                "Key": "is_action_ban",
                                "Value": "true"
                            },
                            {
                                "Key": "ttl",
                                "Value": "\"\""
                            }

                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "content",
                        "Single": true,
                        "Text":  "b\"schema mismatched: \\n'' is not of type 'integer'\\n\\nFailed validating 'type' in schema['properties']['ttl']:\\n    {'description': 'Duration time for ban action',\\n     'minimum': 1,\\n     'title': 'Ban TTL',\\n     'type': 'integer'}\\n\\nOn instance['ttl']:\\n    ''\""
                    }
                },
                {
                    "Name": "User cannot create a ban with negative value",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"bannegative\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"ban_f\""
                            },
                            {
                                "Key": "is_action_ban",
                                "Value": "true"
                            },
                            {
                                "Key": "ttl",
                                "Value": "-1"
                            }

                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "content",
                        "Single": true,
                        "Text":  "b\"schema mismatched: \\n-1 is less than the minimum of 1\\n\\nFailed validating 'minimum' in schema['properties']['ttl']:\\n    {'description': 'Duration time for ban action',\\n     'minimum': 1,\\n     'title': 'Ban TTL',\\n     'type': 'integer'}\\n\\nOn instance['ttl']:\\n    -1\""
                    }
                },
                {
                    "Name": "User cannot create a ban with decimal value",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"bandec\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"ban_g\""
                            },
                            {
                                "Key": "is_action_ban",
                                "Value": "true"
                            },
                            {
                                "Key": "ttl",
                                "Value": "1.22"
                            }

                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "content",
                        "Single": true,
                        "Text":  "b\"schema mismatched: \\n1.22 is not of type 'integer'\\n\\nFailed validating 'type' in schema['properties']['ttl']:\\n    {'description': 'Duration time for ban action',\\n     'minimum': 1,\\n     'title': 'Ban TTL',\\n     'type': 'integer'}\\n\\nOn instance['ttl']:\\n    1.22\""
                    }
                }
            ]
        },
        {
            "Name": "Step 7 -  Include/Exclude",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can create a rate limit with one include",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"include\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"include_a\""
                            },
                            {   "Key": "include",
                                "Value": "[\"tag-include\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can create a rate limit with one exclude",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"exclude\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"exclude_a\""
                            },
                            {   "Key": "exclude",
                                "Value": "[\"tag-exclude\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can add several tags to include",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "include_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"include\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"include_a\""
                            },
                            {   "Key": "include",
                                "Value": "[\"add-tag-include\", \"add-tag-include2\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can add several tags to exclude",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "exclude_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"exclude\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"exclude_a\""
                            },
                            {   "Key": "exclude",
                                "Value": "[\"add-tag-exclude\", \"add-tag-exclude2\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User cannot add same tag to include twice",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "include_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"include\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"include_a\""
                            },
                            {   "Key": "include",
                                "Value": "[\"add-tag-include\", \"add-tag-include\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "User cannot add same tag to exclude twice",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "exclude_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"exclude\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"exclude_a\""
                            },
                            {   "Key": "exclude",
                                "Value": "[\"add-tag-exclude\", \"add-tag-exclude\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "User cannot add same tag to exclude and include",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "exclude_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"exclude\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"exclude_a\""
                            },
                            {   "Key": "include",
                                "Value": "[\"include-exclude\"]"
                            },
                            {   "Key": "exclude",
                                "Value": "[\"include-exclude\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "User cannot add tag less then 3 chars to include",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "include_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"include\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"include_a\""
                            },
                            {   "Key": "include",
                                "Value": "[\"in\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "User cannot add tag less then 3 chars to exclude",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "exclude_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"exclude\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"exclude_a\""
                            },
                            {   "Key": "exclude",
                                "Value": "[\"ex\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        },
        {
            "Name": "Step 8 - Number of events validations",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can create a rate limit with number of events: '0'",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"timeevzero\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_ev-zero\""
                            },
                            {
                                "Key": "threshold",
                                "Value": "0"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can create a rate limit with number of events: '15'",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"timeevfifteen\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_ev-fifteen\""
                            },
                            {
                                "Key": "threshold",
                                "Value": "15"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User cannot create rate limit with number of events: text",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"timeevtext\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_ev_test\""
                            },
                            {
                                "Key": "threshold",
                                "Value": "\"text\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "content",
                        "Single": true,
                        "Text": "b\"schema mismatched: \\n'text' is not of type 'integer'\\n\\nFailed validating 'type' in schema['properties']['threshold']:\\n    {'description': 'The threshold of requests allowed',\\n     'title': 'Threshold',\\n     'type': 'integer'}\\n\\nOn instance['threshold']:\\n    'text'\""
                    }
                },
                {
                    "Name": "User cannot create rate limit with number of events: negative number",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"timeevnegative\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_ev_negative\""
                            },
                            {
                                "Key": "threshold",
                                "Value": "-1"
                            }
                        ]
                    },
                     "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "User cannot create rate limit with number of events: decimal number",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"timeevdec\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_ev_dec\""
                            },
                            {
                                "Key": "threshold",
                                "Value": "1.25"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "content",
                        "Single": true,
                        "Text": "b\"schema mismatched: \\n1.25 is not of type 'integer'\\n\\nFailed validating 'type' in schema['properties']['threshold']:\\n    {'description': 'The threshold of requests allowed',\\n     'title': 'Threshold',\\n     'type': 'integer'}\\n\\nOn instance['threshold']:\\n    1.25\""
                    }
                }
            ]
        },
        {
            "Name": "Step 9 - Global checkbox",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can create rate limit with global checkbox ON",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"gcon\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"check_cb_on\""
                            },
                            {
                                "Key": "global",
                                "Value": "true"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Verify global checkbox ON",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "rate-limits",
                        "Path": ""
                    },
                    "Method" :"GET",
                    "Expected":
                    {
                        "Code": "200",
                        "Type": "json",
						"Single": false,
                        "MultipleResults":
                        [
                            [
                                {
                                    "Key": "name",
                                    "Value": "gcon"
                                },
                                {
                                    "Key": "id",
                                    "Value": "check_cb_on"
                                },
                                {
                                    "Key": "global",
                                    "Value": true
                                }
                            ]
                        ]
                    }
                },
                {
                    "Name": "User can switch OFF global checkbox",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "check_cb_on/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"check_cb_on\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"gcon\""
                            },
                            {
                                "Key": "global",
                                "Value": "false"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Verify global checkbox OFF",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "rate-limits",
                        "Path": ""
                    },
                    "Method" :"GET",
                    "Expected":
                    {
                        "Code": "200",
                        "Type": "json",
						"Single": false,
                        "MultipleResults":
                        [
                            [
                                {
                                    "Key": "name",
                                    "Value": "gcon"
                                },
                                {
                                    "Key": "id",
                                    "Value": "check_cb_on"
                                },
                                {
                                    "Key": "global",
                                    "Value": false
                                }
                            ]
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Step 10 - Active checkbox",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can create rate limit with active checkbox ON",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"activecbon\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"active_check_cb_on\""
                            },
                            {
                                "Key": "active",
                                "Value": "true"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Verify active checkbox ON",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "rate-limits",
                        "Path": ""
                    },
                    "Method" :"GET",
                    "Expected":
                    {
                        "Code": "200",
                        "Type": "json",
						"Single": false,
                        "MultipleResults":
                        [
                            [
                                {
                                    "Key": "id",
                                    "Value": "active_check_cb_on"
                                },
                                 {
                                    "Key": "name",
                                    "Value": "activecbon"
                                },
                                {
                                    "Key": "active",
                                    "Value": true
                                }
                            ]
                        ]
                    }
                },
                {
                    "Name": "User can switch OFF active checkbox",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "active_check_cb_on/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"active_check_cb_on\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"activecbon\""
                            },
                            {
                                "Key": "active",
                                "Value": "false"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Verify active checkbox OFF",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "rate-limits",
                        "Path": ""
                    },
                    "Method" :"GET",
                    "Expected":
                    {
                        "Code": "200",
                        "Type": "json",
						"Single": false,
                        "MultipleResults":
                        [
                            [
                                {
                                    "Key": "id",
                                    "Value": "active_check_cb_on"
                                },
                                {
                                    "Key": "active",
                                    "Value": false
                                }
                            ]
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Step 11 - Tags field",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can create a rate limit without tags",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"tagsa\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"tags_a\""
                            },
                            {   "Key": "tags",
                                "Value": "[]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can add one tag",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "tags_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                         "Params": [
                            {
                                "Key": "name",
                                "Value": "\"tagsa\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"tags_a\""
                            },
                            {   "Key": "tags",
                                "Value": "[\"facebook\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can add several tags",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "tags_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                         "Params": [
                            {
                                "Key": "name",
                                "Value": "\"tagsa\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"tags_a\""
                            },
                            {   "Key": "tags",
                                "Value": "[\"api\", \"allowedlist\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can add a very long tag",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "tags_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                         "Params": [
                            {
                                "Key": "name",
                                "Value": "\"tagsa\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"tags_a\""
                            },
                            {   "Key": "tags",
                                "Value": "[\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can add tag with special chars",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "tags_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                         "Params": [
                            {
                                "Key": "name",
                                "Value": "\"tagsa\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"tags_a\""
                            },
                            {   "Key": "tags",
                                "Value": "[\"!@#$%^&*()<>'_-.\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User cannot add a tag with one char",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "tags_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                         "Params": [
                            {
                                "Key": "name",
                                "Value": "\"tagsa\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"tags_a\""
                            },
                            {   "Key": "tags",
                                "Value": "[\"a\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "User cannot add a tag with two chars",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "tags_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                         "Params": [
                            {
                                "Key": "name",
                                "Value": "\"tagsa\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"tags_a\""
                            },
                            {   "Key": "tags",
                                "Value": "[\"aa\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "User cannot add a tag with space chars",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "tags_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                         "Params": [
                            {
                                "Key": "name",
                                "Value": "\"tagsa\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"tags_a\""
                            },
                            {   "Key": "tags",
                                "Value": "[\" \"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "User can add a tag without spaces char",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "tags_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                         "Params": [
                            {
                                "Key": "name",
                                "Value": "\"tagsa\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"tags_a\""
                            },
                            {   "Key": "tags",
                                "Value": "[\"testtag\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can add a tag with leading space char",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "tags_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                         "Params": [
                            {
                                "Key": "name",
                                "Value": "\"tagsa\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"tags_a\""
                            },
                            {   "Key": "tags",
                                "Value": "[\"  leading\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can add a tag with trailing space char ",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "tags_a/"
                    },
                    "Method": "PUT",
                    "Payload": {
                         "Params": [
                            {
                                "Key": "name",
                                "Value": "\"tagsa\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"tags_a\""
                            },
                            {   "Key": "tags",
                                "Value": "[\"trailing  \"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Step 12 - save",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can create a rate limit",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"saverl\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"save_rl\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can check new rate limit",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "rate-limits",
                        "Path": ""
                    },
                    "Method" :"GET",
                    "Expected":
                    {
                        "Code": "200",
                        "Type": "json",
						"Single": false,
                        "MultipleResults":
                        [
                            [
                                {
                                    "Key": "id",
                                    "Value": "save_rl"
                                },
                                {
                                    "Key": "name",
                                    "Value": "saverl"
                                }
                            ]
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Step 13 - choose Security policy",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can create a rate limit",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"securitypolicyrl\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"security_policy_id\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can add security policy to new rate limit",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "security-policy",
                        "Path": "__default__/"
                    },
                    "Method" :"PUT",
                    "Payload":
                    {
                        "Params":
                        [
                            {
                                "Key": "id",
                                "Value": "\"__default__\""
                            },
                            {
                                "Key": "map",
                                "Value": "[{\"id\": \"__root_entry__\", \"name\": \"__root__\", \"match\": \"^/(\\\\W.*)?$\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"__defaultcontentfilter__\", \"content_filter_active\": true, \"limit_ids\": []},{ \"id\": \"__default_entry__\", \"name\": \"__default__\", \"match\": \"/\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"__defaultcontentfilter__\", \"content_filter_active\": true, \"limit_ids\": [\"security_policy_id\"]}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Step 14 - remove Security policy",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can create a rate limit",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"securitypolicyb\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"security_policy_b\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can add security policy to new rate limit",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "security-policy",
                        "Path": "__default__/"
                    },
                    "Method" :"PUT",
                    "Payload":
                    {
                        "Params":
                        [
                            {
                                "Key": "id",
                                "Value": "\"__default__\""
                            },
                            {
                                "Key": "map",
                                "Value": "[{\"id\": \"__root_entry__\", \"name\": \"__root__\", \"match\": \"^/(\\\\W.*)?$\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"__defaultcontentfilter__\", \"content_filter_active\": true, \"limit_ids\": []},{ \"id\": \"__default_entry__\", \"name\": \"__default__\", \"match\": \"/\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"__defaultcontentfilter__\", \"content_filter_active\": true, \"limit_ids\": [\"security_policy_b\"]}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can delete security policy from new rate limit",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "security-policy",
                        "Path": "__default__/"
                    },
                    "Method" :"PUT",
                    "Payload":
                    {
                        "Params":
                        [
                            {
                                "Key": "id",
                                "Value": "\"__default__\""
                            },
                            {
                                "Key": "map",
                                "Value": "[{\"id\": \"__root_entry__\", \"name\": \"__root__\", \"match\": \"^/(\\\\W.*)?$\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"__defaultcontentfilter__\", \"content_filter_active\": true, \"limit_ids\": []},{ \"id\": \"__default_entry__\", \"name\": \"__default__\", \"match\": \"/\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"__defaultcontentfilter__\", \"content_filter_active\": true, \"limit_ids\": []}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Step 15 - edit a rule",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can create a rate limit",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"testnameedit\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"test_edit\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can switch OFF active checkbox",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": "test_edit/"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test_edit\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"testnameedited\""
                            },
                            {
                                "Key": "active",
                                "Value": "false"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Step 16 - linked Security policy we can not Delete",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can create a rate limit",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"securitypolicya\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"security_policy_a\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can add security policy to new rate limit",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "security-policy",
                        "Path": "__default__/"
                    },
                    "Method" :"PUT",
                    "Payload":
                    {
                        "Params":
                        [
                            {
                                "Key": "id",
                                "Value": "\"__default__\""
                            },
                            {
                                "Key": "map",
                                "Value": "[{\"id\": \"__root_entry__\", \"name\": \"__root__\", \"match\": \"^/(\\\\W.*)?$\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"__defaultcontentfilter__\", \"content_filter_active\": true, \"limit_ids\": []},{ \"id\": \"__default_entry__\", \"name\": \"__default__\", \"match\": \"/\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"__defaultcontentfilter__\", \"content_filter_active\": true, \"limit_ids\": [\"security_policy_a\"]}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User cannot delete the rate limit with attached security policy",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "rate-limit",
                        "Path": "security_policy_a/"
                    },
                    "Method" :"DELETE",
                    "Expected": {
                        "Code": "400",
                        "Type": "json",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        },
        {
            "Name": "Step 17 - 'Delete' button",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can create a rate limit",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "rate-limit",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"testnamedelete\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"test_delete\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "User can delete the rate limit ",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "rate-limit",
                        "Path": "test_delete/"
                    },
                    "Method" :"DELETE",
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Step 18 - Switch to another existing rule",
            "Skip": true,
            "Steps": [
                {
                    "Name": "User can get all rate limits",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "rate-limits",
                        "Path": ""
                    },
                    "Method" :"GET",
                    "Expected":
                    {
                        "Code": "200",
                        "Type": "json",
						"Single": false,
                        "MultipleResults":
                        [
                            [
                                {
                                    "Key": "id",
                                    "Value": "rl-asn-path-ddos"
                                },
                                {
                                    "Key": "name",
                                    "Value": "global rate limit asn per host+path 10k/60"
                                }
                            ],
                            [
                                {
                                    "Key": "id",
                                    "Value": "rl-session-host-ddos"
                                },
                                {
                                    "Key": "name",
                                    "Value": "global rate limit session per host 300/180"
                                }
                            ],
                            [
                                {
                                    "Key": "id",
                                    "Value": "rl-session-host-ddos-static"
                                },
                                {
                                    "Key": "name",
                                    "Value": "global rate limit session per host 400/180"
                                }
                            ],
                            [
                                {
                                    "Key": "id",
                                    "Value": "rl-session-path-ddos"
                                },
                                {
                                    "Key": "name",
                                    "Value": "global rate limit session per path 60/60"
                                }
                            ],
                            [
                                {
                                    "Key": "id",
                                    "Value": "rl-session-cross-ip"
                                },
                                {
                                    "Key": "name",
                                    "Value": "global rate limit session per ip 5/3600"
                                }
                            ],
                            [
                                {
                                    "Key": "id",
                                    "Value": "rl-session-cross-asn"
                                },
                                {
                                    "Key": "name",
                                    "Value": "global rate limit session per asn 2/3600"
                                }
                            ],
                            [
                                {
                                    "Key": "id",
                                    "Value": "rl-session-cross-country"
                                },
                                {
                                    "Key": "name",
                                    "Value": "global rate limit session per country 2/3600"
                                }
                            ],
                            [
                                {
                                    "Key": "id",
                                    "Value": "rl-rbzid-cross-ip"
                                },
                                {
                                    "Key": "name",
                                    "Value": "global rate limit rbzid per ip 5/3600"
                                }
                            ],
                            [
                                {
                                    "Key": "id",
                                    "Value": "rl-rbzid-cross-asn"
                                },
                                {
                                    "Key": "name",
                                    "Value": "global rate limit rbzid per asn 2/3600"
                                }
                            ],
                            [
                                {
                                    "Key": "id",
                                    "Value": "rl-rbzid-cross-country"
                                },
                                {
                                    "Key": "name",
                                    "Value": "global rate limit rbzid per country 2/3600"
                                }
                            ]
                        ]
                    }
                }
            ]
        }
    ]
}
