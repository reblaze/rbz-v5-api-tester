{
    "Name":"TA 1300 Global test all types of entry",
    "Skip":false,
    "Tests":[
        {
         "Name": "Test 1: Add to trusted sources your IP.",
         "Skip": false,
         "Steps": [
                 {
                    "ID": "add-my-ip-to-trusted-source",
                    "Skip": false
                 }
             ]
        },
        {
            "Name": "Test 2: Create Security policy 'test-specific-sp' and server group 'test-specific-site'",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: User can create security policy `test-specific-sp`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "security-policy",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test-specific-sp\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test-specific-sp\""
                            },
                            {
                                "Key": "map",
                                "Value": "[{\"id\": \"__default_entry__\", \"match\": \"/\", \"name\": \"default\", \"acl_profile\": \"__acldefault__\", \"content_filter_profile\": \"__defaultcontentfilter__\", \"backend_id\": \"__default__\", \"acl_active\": false, \"content_filter_active\": false, \"limit_ids\": [], \"cloud_functions\": []}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: Create new server group 'test-specific-site' ",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"server-group",
                        "Path":"test-specific-site/"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-specific-site\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-specific-site\""
                            },
                            {
                                "Key":"server_names",
                                "Value":"[\"test-specific.site\"]"
                            },
                            {
                                "Key":"security_policy",
                                "Value":"\"test-specific-sp\""
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"id",
                                "Value":"test-specific-site"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 3: Test global filter 'path-regex-not'",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: User can create global filter with name `path-regex-not`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "global-filter",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"path-regex-not\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"path-regex-not\""
                            },
                            {
                                "Key": "active",
                                "Value": "true"
                            },
                            {
                                "Key": "action",
                                "Value": "\"action-global-filter-block\""
                            },
                            {
                                "Key": "rule",
                                "Value": "{\"relation\": \"OR\", \"entries\": [[\"path\", \"!path-regex-not\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"path-regex-not\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "ID":"publish-changes",
                    "Skip":false
                },
                {
                    "ID":"wait-for-publish",
                    "Skip":false
                },
                {
                    "Name":"Step: Send Traffic 1 to global filter `path-regex-not`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/step10-3"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test-specific.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.119.111.1"
                        }
                    ],

                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `path-regex-not`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/path-regex-not"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test-specific.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.119.111.1"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                },
                {
                    "ID":"wait-for-logs",
                    "Skip":false
                },
                {
                    "Name":"Step: Get Logs from global filter 'path-regex-not'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /step10-3, status = 470, timestamp between @@NOW(-5minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"path-regex-not"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 4: Delete global filter 'path-regex-not'",
            "Skip":false,
            "Steps":[
                {
                    "Name": "Delete global filter 'path-regex-not'",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "global-filter",
                        "Path": "path-regex-not/"
                    },
                    "Method" :"DELETE",
                    "Expected":
                    {
                        "Code": "200",
                        "Type": "json",
						"Single": true,
                        "SingleResult":
                        [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 5: Test global filter 'path-regex-all'",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: User can create global filter with name `path-regex-all`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "global-filter",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"path-regex-all\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"path-regex-all\""
                            },
                            {
                                "Key": "active",
                                "Value": "true"
                            },
                            {
                                "Key": "action",
                                "Value": "\"action-global-filter-block\""
                            },
                            {
                                "Key": "rule",
                                "Value": "{\"relation\": \"OR\", \"entries\": [[\"path\", \"/.+\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"path-regex-all\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "ID":"publish-changes",
                    "Skip":false
                },
                {
                    "ID":"wait-for-publish",
                    "Skip":false
                },
                {
                    "Name":"Step: Send Traffic 1 to global filter `path-regex-all`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/path-regex-all"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test-specific.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.119.111.1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `path-regex-all`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test-specific.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.119.111.1"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "ID":"wait-for-logs",
                    "Skip":false
                },
                {
                    "Name":"Step: Get Logs from global filter 'path-regex-all'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /path-regex-all, status = 470, timestamp between @@NOW(-5minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"path-regex-all"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 6: Delete global filter 'path-regex-all'",
            "Skip":false,
            "Steps":[
                {
                    "Name": "Delete global filter 'path-regex-all'",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "global-filter",
                        "Path": "path-regex-all/"
                    },
                    "Method" :"DELETE",
                    "Expected":
                    {
                        "Code": "200",
                        "Type": "json",
						"Single": true,
                        "SingleResult":
                        [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 7: Test global filter 'query-regex-not'",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: User can create global filter with name `query-regex-not`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "global-filter",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"query-regex-not\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"query-regex-not\""
                            },
                            {
                                "Key": "active",
                                "Value": "true"
                            },
                            {
                                "Key": "action",
                                "Value": "\"action-global-filter-block\""
                            },
                            {
                                "Key": "rule",
                                "Value": "{\"relation\": \"OR\", \"entries\": [[\"query\", \"!query-regex-not=step12-3\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"query-regex-not\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "ID":"publish-changes",
                    "Skip":false
                },
                {
                    "ID":"wait-for-publish",
                    "Skip":false
                },
                {
                    "Name":"Step: Send Traffic 1 to global filter `query-regex-not`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/test"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test-specific.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.152.99.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"query-regex-not",
                            "Value":"query-regex-not"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `query-regex-not`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/test"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test-specific.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.152.99.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"query-regex-not",
                            "Value":"step12-3"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                },
                {
                    "ID":"wait-for-logs",
                    "Skip":false
                },
                {
                    "Name":"Step: Get Logs from global filter 'query-regex-not'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /test, status = 470, timestamp between @@NOW(-5minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"query-regex-not"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 8: Delete global filter 'query-regex-not'",
            "Skip":false,
            "Steps":[
                {
                    "Name": "Delete global filter 'query-regex-not'",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "global-filter",
                        "Path": "query-regex-not/"
                    },
                    "Method" :"DELETE",
                    "Expected":
                    {
                        "Code": "200",
                        "Type": "json",
						"Single": true,
                        "SingleResult":
                        [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 9: Delete security policy 'test-specific-sp' and server group 'test-specific-site'",
            "Skip":false,
            "Steps":[
                {
                    "Name": "Delete security-policy 'test-specific-sp'",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "security-policy",
                        "Path": "test-specific-sp/"
                    },
                    "Method" :"DELETE",
                    "Expected":
                    {
                        "Code": "200",
                        "Type": "json",
						"Single": true,
                        "SingleResult":
                        [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Delete server group 'test-specific-site'",
                    "Skip": false,
                    "GenerateID": false,
                    "API":
                    {
                        "Base": "server-group",
                        "Path": "test-specific-site/"
                    },
                    "Method" :"DELETE",
                    "Expected":
                    {
                        "Code": "204",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 10: Create global filters",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: User can create global filter with name `arg-key-case-sensitive`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"arg-key-case-sensitive\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"arg-key-case-sensitive\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"args\", [\"Arg-key-case-sensitive\", \"step1-1\"], \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"arg-key-case-sensitive\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `arg-not-value`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"arg-not-value\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"arg-not-value\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"args\", [\"arg-not-value\", \"!step1-2\"], \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"arg-not-value\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `arg-regex-or`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"arg-regex-or\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"arg-regex-or\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"args\", [\"arg-regex-or\", \"(1|2|3|4|5|6|7|8|9)\"], \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"arg-regex-or\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `arg-regex-all`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"arg-regex-all\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"arg-regex-all\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"args\", [\"arg-regex-all\", \".+\"], \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"arg-regex-all\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `gf-by-asn`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"gf-by-asn\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"gf-by-asn\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"asn\", \"48014\", \"Albanian Hosting SH.P.K.\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"gf-by-asn\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `gf-by-authority`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"gf-by-authority\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"gf-by-authority\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"authority\", \"test-gf.site\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"gf-by-authority\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `cookie-key-case-sensitive`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"cookie-key-case-sensitive\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"cookie-key-case-sensitive\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"cookies\", [\"Cookie-key-case-sensitive\", \"step4-1\"], \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"cookie-key-case-sensitive\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `cookie-not-value`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"cookie-not-value\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"cookie-not-value\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"cookies\", [\"cookie-not-value\", \"!step4-2\"], \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"cookie-not-value\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `cookie-regex-or`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"cookie-regex-or\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"cookie-regex-or\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"cookies\", [\"cookie-regex-or\", \"(1|2|3|4|5|6|7|8|9)\"], \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"cookie-regex-or\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `cookie-regex-all`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"cookie-regex-all\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"cookie-regex-all\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"cookies\", [\"cookie-regex-all\", \".+\"], \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"cookie-regex-all\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `gf-by-country`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"gf-by-country\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"gf-by-country\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"country\", \"Spain\", \" \"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"gf-by-country\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `header-key-case-insensitive`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"header-key-case-insensitive\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"header-key-case-insensitive\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"headers\", [\"Header-key-case-insensitive\", \"step6-1\"], \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"header-key-case-insensitive\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `header-not-value`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"header-not-value\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"header-not-value\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"headers\", [\"header-not-value\", \"!step6-2\"], \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"header-not-value\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `header-regex-or`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"header-regex-or\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"header-regex-or\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"headers\", [\"header-regex-or\", \"(1|2|3|4|5|6|7|8|9)\"], \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"header-regex-or\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `header-regex-all`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"header-regex-all\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"header-regex-all\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"headers\", [\"header-regex-all\", \".+\"], \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"header-regex-all\"]"
                            }

                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `gf-by-ip`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"gf-by-ip\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"gf-by-ip\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"ip\", \"1.178.48.1\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"gf-by-ip\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `gf-by-method`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"gf-by-method\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"gf-by-method\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"method\", \"DELETE\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"gf-by-method\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `gf-by-organization`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"gf-by-organization\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"gf-by-organization\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"company\", \"ASN9723 iseek Communications Pty Ltd\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"gf-by-organization\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `path-contains`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"path-contains\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"path-contains\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"path\", \"path-contains\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"path-contains\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `path-exact-match`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"path-exact-match\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"path-exact-match\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"path\", \"^/path-exact-match$\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"path-exact-match\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `gf-by-path-name`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"gf-by-path-name\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"gf-by-path-name\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"securitypolicyentryname\", \"gf-by-path-name\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"gf-by-path-name\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `query-simple`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"query-simple\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"query-simple\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"query\", \"query-simple=step12-1\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"query-simple\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `query-regex-or`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"query-regex-or\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"query-regex-or\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"query\", \"query-regex-or=(a|b|c)\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"query-regex-or\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `gf-by-region`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"gf-by-region\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"gf-by-region\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"region\", \"chittagong\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"gf-by-region\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `gf-by-sp-name`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"gf-by-sp-name\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"gf-by-sp-name\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"securitypolicyname\", \"test-gf-sp\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"gf-by-sp-name\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `gf-by-subregion`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"gf-by-subregion\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"gf-by-subregion\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"subregion\", \"2030\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"gf-by-subregion\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `gf-by-tag`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"gf-by-tag\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"gf-by-tag\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"tag\", \"ip:103-158-33-1\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"gf-by-tag\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `uri-with-query`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"uri-with-query\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"uri-with-query\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"uri\", \"uri-with-query?a=b\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"uri-with-query\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create global filter with name `uri-with-regex`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"global-filter",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"name",
                                "Value":"\"uri-with-regex\""
                            },
                            {
                                "Key":"id",
                                "Value":"\"uri-with-regex\""
                            },
                            {
                                "Key":"active",
                                "Value":"true"
                            },
                            {
                                "Key":"action",
                                "Value":"\"action-global-filter-block\""
                            },
                            {
                                "Key":"rule",
                                "Value":"{\"relation\": \"OR\", \"entries\": [[\"uri\", \"(step17-2|uri-with-regex|step17-3)?a=b\", \"\"]]}"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"uri-with-regex\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 11: Create Security policies",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: User can create security policy `test-sp`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"security-policy",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"map",
                                "Value":"[{\"id\": \"__default_entry__\", \"match\": \"/\", \"name\": \"default\", \"acl_profile\": \"__acldefault__\", \"content_filter_profile\": \"__defaultcontentfilter__\", \"backend_id\": \"__default__\", \"acl_active\": false, \"content_filter_active\": false, \"limit_ids\": [], \"cloud_functions\": []}, {\"id\": \"gf-by-path-name\", \"match\": \"/gf-by-path-name\", \"name\": \"gf-by-path-name\", \"acl_profile\": \"__acldefault__\", \"content_filter_profile\": \"__defaultcontentfilter__\", \"backend_id\": \"__default__\", \"acl_active\": false, \"content_filter_active\": false, \"limit_ids\": [], \"cloud_functions\": []}, {\"id\": \"step11\", \"match\": \"/step11\", \"name\": \"step11\", \"acl_profile\": \"__acldefault__\", \"content_filter_profile\": \"__defaultcontentfilter__\", \"backend_id\": \"__default__\", \"acl_active\": false, \"content_filter_active\": false, \"limit_ids\": [], \"cloud_functions\": []}]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: User can create security policy `test-gf-sp`",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"security-policy",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-gf-sp\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-gf-sp\""
                            },
                            {
                                "Key":"map",
                                "Value":"[{\"id\": \"__default_entry__\", \"match\": \"/\", \"name\": \"default\", \"acl_profile\": \"__acldefault__\", \"content_filter_profile\": \"__defaultcontentfilter__\", \"backend_id\": \"__default__\", \"acl_active\": false, \"content_filter_active\": false, \"limit_ids\": [], \"cloud_functions\": []}]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 12: Create server groups and publish changes",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Create new server group 'test.site' ",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"server-group",
                        "Path":"test-site/"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"server_names",
                                "Value":"[\"test.site\"]"
                            },
                            {
                                "Key":"security_policy",
                                "Value":"\"test-sp\""
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"id",
                                "Value":"test-site"
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: Create new server group 'test-gf.site' ",
                    "Skip": false,
                    "GenerateID":false,
                    "API":{
                        "Base":"server-group",
                        "Path":"test-gf-site/"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-gf-site\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-gf-site\""
                            },
                            {
                                "Key":"server_names",
                                "Value":"[\"test-gf.site\"]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"id",
                                "Value":"test-gf-site"
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: Create new server group 'test-gf-sp.site' ",
                    "Skip": false,
                    "GenerateID":false,
                    "API":{
                        "Base":"server-group",
                        "Path":"test-gf-sp-site/"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-gf-sp-site\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-gf-sp-site\""
                            },
                            {
                                "Key":"server_names",
                                "Value":"[\"test-gf-sp.site\"]"
                            },
                            {
                                "Key":"security_policy",
                                "Value":"\"test-gf-sp\""
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"id",
                                "Value":"test-gf-sp-site"
                            }
                        ]
                    }
                },
                {
                    "ID":"publish-changes",
                    "Skip":false
                },
                {
                    "ID":"wait-for-publish",
                    "Skip":false
                }
            ]
        },
        {
            "Name":"Test 13: Send traffics to global filter 'arg-key-case-sensitive'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `arg-key-case-sensitive`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/arg-key-case-sensitive"
                    },
                    "Method":"POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.102.220.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"Arg-key-case-sensitive",
                            "Value":"step1-1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `arg-key-case-sensitive`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/arg-key-case-sensitive"
                    },
                    "Method":"POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.102.220.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"arg-key-case-sensitive",
                            "Value":"step1-1"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 14: Send traffics to global filter 'arg-not-value'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `arg-not-value`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/arg-not-value"
                    },
                    "Method":"POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.102.220.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"arg-not-value",
                            "Value":"arg-not-value"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `arg-not-value`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/arg-not-value"
                    },
                    "Method":"POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.102.220.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"arg-not-value",
                            "Value":"step1-2"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 15: Send traffics to global filter 'arg-regex-or'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `arg-regex-or`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/arg-regex-or"
                    },
                    "Method":"POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.102.220.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"arg-regex-or",
                            "Value":"123"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `arg-regex-or`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/arg-regex-or"
                    },
                    "Method":"POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.102.220.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"arg-regex-or",
                            "Value":"arg-regex-or"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 16: Send traffics to global filter 'arg-regex-all'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `arg-regex-all`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/arg-regex-all"
                    },
                    "Method":"POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.102.220.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"arg-regex-all",
                            "Value":"arg-regex-all"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                }
            ]
        },
        {
            "Name":"Test 17: Send traffics to global filter 'gf-by-asn'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `gf-by-asn`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-asn"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.167.234.1"
                        }

                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `gf-by-asn`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-asn"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "185.190.24.1"
                        }
                    ],

                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 18: Send traffics to global filter 'gf-by-authority'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `gf-by-authority`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-authority"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test-gf.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "102.213.56.1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `gf-by-authority`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-authority"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "default.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "102.213.56.1"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 19: Send traffics to global filter 'cookie-key-case-sensitive'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `cookie-key-case-sensitive`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/cookie-key-case-sensitive"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.117.168.1"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "Cookie-key-case-sensitive=test-step4-1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `cookie-key-case-sensitive`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/cookie-key-case-sensitive"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.117.168.1"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "cookie-key-case-sensitive=test-step4-1"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 20: Send traffics to global filter 'cookie-not-value'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `cookie-not-value`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/cookie-not-value"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.117.168.1"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "cookie-not-value=cookie-not-value"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `cookie-not-value`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/cookie-not-value"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "cookie-not-value=step4-2"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 21: Send traffics to global filter 'cookie-regex-or'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `cookie-regex-or`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/cookie-regex-or"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.117.168.1"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "cookie-regex-or=123"
                        }
                    ],

                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `cookie-regex-or`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/cookie-regex-or"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.117.168.1"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "cookie-regex-or=cookie-regex-or"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 22: Send traffics to global filter 'cookie-regex-all'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `cookie-regex-all`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/cookie-regex-all"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.117.168.1"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "cookie-regex-all=cookie-regex-all"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                }
            ]
        },
        {
            "Name":"Test 23: Send traffics to global filter 'gf-by-country'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `gf-by-country`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-country"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "102.38.225.1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `gf-by-country`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-country"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "102.130.192.1"
                        }
                    ],

                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 24: Send traffics to global filter 'header-key-case-insensitive'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `header-key-case-insensitive`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/header-key-case-insensitive"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.152.126.1"
                        },
                        {
                            "Key": "Header-key-case-insensitive",
                            "Value": "step6-1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `header-key-case-insensitive`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/header-key-case-insensitive"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.152.126.1"
                        },
                        {
                            "Key": "header-key-case-insensitive",
                            "Value": "step6-1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                }
            ]
        },
        {
            "Name":"Test 25: Send traffics to global filter 'header-not-value'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `header-not-value`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/header-not-value"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.152.126.1"
                        },
                        {
                            "Key": "header-not-value",
                            "Value": "header-not-value"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `header-not-value`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/header-not-value"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.152.126.1"
                        },
                        {
                            "Key": "header-not-value",
                            "Value": "step6-2"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 26: Send traffics to global filter 'header-regex-or'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `header-regex-or`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/header-regex-or"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.152.126.1"
                        },
                        {
                            "Key": "header-regex-or",
                            "Value": "123"
                        }
                    ],

                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `header-regex-or`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/header-regex-or"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.152.126.1"
                        },
                        {
                            "Key": "header-regex-or",
                            "Value": "header-regex-or"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 27: Send traffics to global filter 'header-regex-all'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `header-regex-all`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/header-regex-all"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.152.126.1"
                        },
                        {
                            "Key": "header-regex-all",
                            "Value": "header-regex-all"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                }
            ]
        },
        {
            "Name":"Test 28: Send traffics to global filter 'gf-by-ip'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `gf-by-ip`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-ip"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "1.178.48.1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `gf-by-ip`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-ip"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "1.178.48.2"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 29: Send traffics to global filter 'gf-by-method'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `gf-by-method`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-method"
                    },
                    "Method":"DELETE",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                         {
                            "Key": "x-forwarded-for",
                            "Value": "103.118.8.1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `gf-by-method`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-method"
                    },
                    "Method":"PUT",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.118.8.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"gf-by-method",
                            "Value":"gf-by-method"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 30: Send traffics to global filter 'gf-by-organization'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `gf-by-organization`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-organization"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "1.178.144.1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `gf-by-organization`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-organization"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.114.67.1"
                        }
                    ],

                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 31: Send traffics to global filter 'path-contains'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `path-contains`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/path-contains123"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.119.111.1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `path-contains`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/PATH-CONTAINS"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.119.111.1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 3 to global filter `path-contains`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/path-not-contains"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.119.111.1"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 32: Send traffics to global filter 'path-exact-match'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `path-exact-match`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/path-exact-match"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.119.111.1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `path-exact-match`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/path-exact-match123"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.119.111.1"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 33: Send traffics to global filter 'gf-by-path-name'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `gf-by-path-name`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-path-name"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "104.166.32.1"
                        }
                    ],

                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `gf-by-path-name`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/step11"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "104.166.32.1"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 34: Send traffics to global filter 'query-simple'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `query-simple`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/test"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.152.99.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"query-simple",
                            "Value":"step12-1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `query-simple`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/test"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.152.99.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"query-simple",
                            "Value":"step12-1"
                        },
                        {
                            "Key":"val",
                            "Value":"b"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 3 to global filter `query-simple`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/test"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.152.99.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"query-simple",
                            "Value":"query-simple"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 35: Send traffics to global filter 'query-regex-or'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `query-regex-or`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/test"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.152.99.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"query-regex-or",
                            "Value":"a"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `query-regex-or`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/test"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.152.99.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"query-regex-or",
                            "Value":"d"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 36: Send traffics to global filter 'gf-by-region'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `gf-by-region`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-region"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "101.2.160.1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `gf-by-region`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-region"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "104.153.128.1"
                        }
                    ],

                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 37: Send traffics to global filter 'gf-by-tag'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter`gf-by-tag`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-tag"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.158.33.1"
                        }

                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `gf-tag`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-tag"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.158.33.2"
                        }
                    ],

                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 38: Send traffics to global filter 'gf-by-sp-name'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `gf-by-sp-name`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-sp-name"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test-gf-sp.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "109.126.128.1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `gf-by-sp-name`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-sp-name"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "default.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "109.126.128.1"
                        }
                    ],

                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 39: Send traffics to global filter 'gf-by-subregion'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `gf-by-subregion`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-subregion"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "103.109.244.1"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `gf-by-subregion`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/gf-by-subregion"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "1.178.32.1"
                        }
                    ],

                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 40: Send traffics to global filter 'uri-with-query'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `uri-with-query`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/uri-with-query"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "100.42.20.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"a",
                            "Value":"b"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `uri-with-query`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/URI-with-query"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "100.42.20.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"a",
                            "Value":"b"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 3 to global filter `uri-with-query`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/uri-with-query"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "100.42.20.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"a",
                            "Value":"b"
                        },
                        {
                            "Key":"c",
                            "Value":"d"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 4 to global filter `uri-with-query`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/uri-with-query"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "100.42.20.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"a",
                            "Value":"c"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 41: Send traffics to global filter 'uri-with-regex'",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: Send Traffic 1 to global filter `uri-with-regex`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/uri-with-regex"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "100.42.20.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"a",
                            "Value":"b"
                        }
                    ],
                    "Expected":{
                        "Code":"470",
                        "Type":"content",
                        "Single":true,
                        "Text":"b'access denied'"
                    }
                },
                {
                    "Name":"Step: Send Traffic 2 to global filter `uri-with-regex`",
                    "Skip":false,
                    "API":{
                        "Base":"send-traffic",
                        "Path":"/uri-with-regex"
                    },
                    "Method":"GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "x-forwarded-for",
                            "Value": "100.42.20.1"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"a",
                            "Value":"c"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"content",
                        "Single":true,
                        "Text":"b''"
                    }
                }
            ]
        },
        {
            "Name":"Test 42: Wait for logs",
            "Skip":false,
            "Steps":[
                {
                    "ID":"wait-for-logs",
                    "Skip":false
                }
            ]
        },
        {
            "Name":"Test 43: Check logs from global filter `arg-key-case-sensitive`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'arg-key-case-sensitive'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /arg-key-case-sensitive, status = 470, timestamp between @@NOW(-3minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"arg-key-case-sensitive"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 44: Check logs from global filter `arg-not-value`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'arg-not-value'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /arg-not-value, status = 470, timestamp between @@NOW(-3minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"arg-not-value"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 45: Check logs from global filter `arg-regex-or`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'arg-regex-or'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /arg-regex-or, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"arg-regex-or"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 46: Check logs from global filter `arg-regex-all`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'arg-regex-all",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /arg-regex-all, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"arg-regex-all"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 47: Check logs from global filter `gf-by-asn`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'gf-by-asn'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /gf-by-asn, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"gf-by-asn"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 48: Check logs from global filter `gf-by-authority`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'gf-by-authority'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /gf-by-authority, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"gf-by-authority"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 49: Check logs from global filter `cookie-key-case-sensitive`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'cookie-key-case-sensitive'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /cookie-key-case-sensitive, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"cookie-key-case-sensitive"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 50: Check logs from global filter `cookie-not-value`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'cookie-not-value'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /cookie-not-value, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"cookie-not-value"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 51: Check logs from global filter `cookie-regex-or`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'cookie-regex-or'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /cookie-regex-or, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"cookie-regex-or"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 52: Check logs from global filter `cookie-regex-all`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'cookie-regex-all'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /cookie-regex-all, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"cookie-regex-all"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 53: Check logs from global filter `gf-by-country`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'gf-by-country'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /gf-by-country, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"gf-by-country"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 54: Check logs from global filter `header-key-case-insensitive`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'header-key-case-insensitive'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /header-key-case-insensitive, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"header-key-case-insensitive"
                            },
                            {
                                "Key":"data/results/1/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/1/tags/*",
                                "Value":"header-key-case-insensitive"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 55: Check logs from global filter `header-not-value`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'header-not-value'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /header-not-value, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"header-not-value"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 56: Check logs from global filter `header-regex-or`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'header-regex-or'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /header-regex-or, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"header-regex-or"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 57: Check logs from global filter `header-regex-all`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'header-regex-all'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /header-regex-all, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"header-regex-all"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 58: Check logs from global filter `gf-by-ip`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'gf-by-ip'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /gf-by-ip, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"gf-by-ip"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 59: Check logs from global filter `gf-by-method`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'gf-by-method'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /gf-by-method, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"gf-by-method"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 60: Check logs from global filter `gf-by-organization`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'gf-by-organization'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /gf-by-organization, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"gf-by-organization"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 61: Check logs from global filter `path-contains`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'path-contains' path `path-contains123`",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /path-contains123, status = 470, timestamp between @@NOW(-5minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"path-contains"
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: Get Logs from global filter 'path-contains' path `/PATH-CONTAINS`",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /PATH-CONTAINS, status = 470, timestamp between @@NOW(-5minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"path-contains"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 62: Check logs from global filter `path-exact-match`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'path-exact-match'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /path-exact-match, status = 470, timestamp between @@NOW(-5minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"path-exact-match"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 63: Check logs from global filter `gf-by-path-name`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'gf-by-path-name'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /gf-by-path-name, status = 470, timestamp between @@NOW(-5minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"gf-by-path-name"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 64: Check logs from global filter `query-simple`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'query-simple'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /test, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/1/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/1/tags/*",
                                "Value":"query-simple"
                            },
                            {
                                "Key":"data/results/2/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/2/tags/*",
                                "Value":"query-simple"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 65: Check logs from global filter `query-regex-or`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'query-regex-or'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /test, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"query-regex-or"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 66: Check logs from global filter `gf-by-region`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'gf-by-region'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /gf-by-region, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"gf-by-region"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 67: Check logs from global filter `gf-by-sp-name`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'gf-by-sp-name'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /gf-by-sp-name, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"gf-by-sp-name"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 68: Check logs from global filter `gf-by-subregion`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'gf-by-subregion'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /gf-by-subregion, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"gf-by-subregion"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 69: Check logs from global filter `gf-by-tag`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'gf-by-tag'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /gf-by-tag, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"gf-by-tag"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 70: Check logs from global filter `uri-with-query`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'uri-with-query' path '/URI-with-query'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /URI-with-query, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"uri-with-query"
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: Get Logs from global filter 'uri-with-query' path '/uri-with-query'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /uri-with-query, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"uri-with-query"
                            },
                            {
                                "Key":"data/results/1/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/1/tags/*",
                                "Value":"uri-with-query"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 71: Check logs from global filter `uri-with-regex`",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: Get Logs from global filter 'uri-with-regex'",
                    "Skip":false,
                    "API":{
                        "Base":"logs",
                        "Path":""
                    },
                    "Method":"GET",
                    "Headers":[
                        {
                            "Key":"syntax",
                            "Value":"string_query"
                        }
                    ],
                    "Arguments":[
                        {
                            "Key":"filters",
                            "Value":"path = /uri-with-regex, status = 470, timestamp between @@NOW(-7minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected":{
                        "Code":"200",
                        "Type":"jsonpath",
                        "Single":true,
                        "Headers":[
                            {
                                "Key":"Server",
                                "Value":"rhino-core-shield"
                            }
                        ],
                        "SingleResult":[
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"status:470"
                            },
                            {
                                "Key":"data/results/0/tags/*",
                                "Value":"uri-with-regex"
                            }
                        ]
                    }
                }
            ]
        }
    ]
}