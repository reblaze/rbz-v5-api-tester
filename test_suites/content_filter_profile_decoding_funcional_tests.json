{
    "Name":"TA 1373 Content filter profile decoding functional tests",
    "Skip":false,
    "Tests":[
        {
            "Name":"Test 1: Create filter profiles",
            "Skip":false,
            "Steps":[
                {
                    "Name": "Step: Create new content filter profile with name `test_cfp_base64`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-profile",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test_cfp_base64\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test_cfp_base64\""
                            },
                            {
                                "Key": "ignore_body",
                                "Value": "false"
                            },
                            {
                                "Key": "decoding",
                                "Value": "{\"base64\": true, \"dual\": false, \"html\": false, \"unicode\": false}"
                            },
                            {
                                "Key": "active",
                                "Value": "[\"cf-rule-risk:5\",\"cf-rule-risk:4\",\"cf-rule-risk:3\",\"cf-rule-subcategory:libinjection-xss\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new content filter profile with name `test_cfp_url`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-profile",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test_cfp_url\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test_cfp_url\""
                            },
                            {
                                "Key": "ignore_body",
                                "Value": "false"
                            },
                            {
                                "Key": "decoding",
                                "Value": "{\"base64\": false, \"dual\": true, \"html\": false, \"unicode\": false}"
                            },
                            {
                                "Key": "active",
                                "Value": "[\"cf-rule-risk:5\",\"cf-rule-risk:4\",\"cf-rule-risk:3\",\"cf-rule-subcategory:libinjection-xss\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new content filter profile with name `test_cfp_html`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-profile",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test_cfp_html\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test_cfp_html\""
                            },
                            {
                                "Key": "ignore_body",
                                "Value": "false"
                            },
                            {
                                "Key": "decoding",
                                "Value": "{\"base64\": false, \"dual\": false, \"html\": true, \"unicode\": false}"
                            },
                            {
                                "Key": "active",
                                "Value": "[\"cf-rule-risk:5\",\"cf-rule-risk:4\",\"cf-rule-risk:3\",\"cf-rule-subcategory:libinjection-xss\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new content filter profile with name `test_cfp_unicode`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-profile",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test_cfp_unicode\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test_cfp_unicode\""
                            },
                            {
                                "Key": "ignore_body",
                                "Value": "false"
                            },
                            {
                                "Key": "decoding",
                                "Value": "{\"base64\": false, \"dual\": false, \"html\": false, \"unicode\": true}"
                            },
                            {
                                "Key": "active",
                                "Value": "[\"cf-rule-risk:5\",\"cf-rule-risk:4\",\"cf-rule-risk:3\",\"cf-rule-subcategory:libinjection-xss\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new content filter profile with name `test_cfp_multiple`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-profile",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test_cfp_multiple\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test_cfp_multiple\""
                            },
                            {
                                "Key": "ignore_body",
                                "Value": "false"
                            },
                            {
                                "Key": "decoding",
                                "Value": "{\"base64\": true, \"dual\": false, \"html\": false, \"unicode\": true}"
                            },
                            {
                                "Key": "active",
                                "Value": "[\"cf-rule-risk:5\",\"cf-rule-risk:4\",\"cf-rule-risk:3\",\"cf-rule-subcategory:libinjection-xss\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 2: Create security policy ",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: User can create security policy with attached content filter profiles",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"security-policy",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"map",
                                "Value":"[{\"id\":\"__root_entry__\",\"name\":\"__root__\",\"match\":\"^/(\\\\W.*)?$\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"__default_entry__\",\"name\":\"__default__\",\"match\":\"/\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]}, {\"id\": \"test-base\", \"name\": \"test-base\", \"match\": \"/test-base\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test_cfp_base64\", \"content_filter_active\": true, \"limit_ids\": []}, {\"id\": \"test-url\", \"name\": \"test-url\", \"match\": \"/test-url\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test_cfp_url\", \"content_filter_active\": true, \"limit_ids\": []}, {\"id\": \"test-html\", \"name\": \"test-html\", \"match\": \"/test-html\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test_cfp_html\", \"content_filter_active\": true, \"limit_ids\": []}, {\"id\": \"test-unicode\", \"name\": \"test-unicode\", \"match\": \"/test-unicode\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test_cfp_unicode\", \"content_filter_active\": true, \"limit_ids\": []}, {\"id\": \"test-multiple\", \"name\": \"test-multiple\", \"match\": \"/test-multiple\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test_cfp_multiple\", \"content_filter_active\": true, \"limit_ids\": []}]"

                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: Create new server group 'test.site' ",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"server-group",
                        "Path":"test-site/"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"server_names",
                                "Value":"[\"test.site\"]"
                            },
                            {
                                "Key":"security_policy",
                                "Value":"\"test-sp\""
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"id",
                                "Value":"test-site"
                            }
                        ]
                    }
                },
                {
                    "ID":"publish-changes",
                    "Skip":false
                },
                {
                    "ID":"wait-for-publish",
                    "Skip":false
                }
            ]
        },
        {
            "Name": "Test 3: Send traffics ",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Send Traffic 1 to path test-base -d 'test-osci=$( echo '<select>' | base64 )'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-base"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments":
                    [
                        {
                            "Key": "test-osci",
                            "Value": "$UEhObGJHVmpkRDRLCg=="
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 2 to path test-base -d 'test-osci=%3Cselect%3E'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-base"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments":
                    [
                        {
                            "Key": "test-osci",
                            "Value": "%3Cselect%3E"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        },
        {
            "Name": "Test 4: Send traffics",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Send Traffic 1 to path test-url -d 'test-osci=$( echo '<select>' | base64 )'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-url"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments":
                    [
                        {
                            "Key": "test-osci",
                            "Value": "$UEhObGJHVmpkRDRLCg=="
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 2 to path test-url -d 'test-osci=%3Cselect%3E'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-url"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments":
                    [
                        {
                            "Key": "test-osci",
                            "Value": "%3Cselect%3E"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        },
        {
            "Name": "Test 5: Send traffics ",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Send Traffic 1 to path test-html -d 'test-osci=$( echo '<select>' | base64 )'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-html"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments":
                    [
                        {
                            "Key": "test-osci",
                            "Value": "$UEhObGJHVmpkRDRLCg=="
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 2 to path test-html -d 'test-osci=%3Cselect%3E'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-html"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments":
                    [
                        {
                            "Key": "test-osci",
                            "Value": "%3Cselect%3E"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        },
        {
            "Name": "Test 6: Send traffics ",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Send Traffic 1 to path test-unicode -d 'test-osci=$( echo '<select>' | base64 )'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-unicode"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments":
                    [
                        {
                            "Key": "test-osci",
                            "Value": "$UEhObGJHVmpkRDRLCg=="
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 2 to path test-unicode -d 'test-osci=%3Cselect%3E'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-unicode"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments":
                    [
                        {
                            "Key": "test-osci",
                            "Value": "%3Cselect%3E"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        },
        {
            "Name": "Test 7: Send traffics ",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Send Traffic 1 to path /test-multiple -d 'test-osci=$( echo '<select>' | base64 )'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-multiple"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments":
                    [
                        {
                            "Key": "test-osci",
                            "Value": "$UEhObGJHVmpkRDRLCg=="
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 2 to path /test-multiple -d 'test-osci=%3Cselect%3E'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-multiple"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments":
                    [
                        {
                            "Key": "test-osci",
                            "Value": "%3Cselect%3E"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        }
    ]
}