{
    "Name":"TA 1317 Edge function functional tests",
    "Skip":false,
    "Tests":[
        {
            "Name":"Test 1: Request phase",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Create an edge function 'ef_request'",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"api-edge-functions",
                        "Path":"/ef_request"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"ef_request\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"ef_request\""
                            },
                            {
                                "Key":"phase",
                                "Value":"\"request\""
                            },
                            {
                                "Key": "code",
                                "Value": "\"ngx.header['foo-request'] = 'bar-request'\""
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 2: Response phase",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Create an edge function 'ef_response'",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"api-edge-functions",
                        "Path":"/ef_response"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"ef_response\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"ef_response\""
                            },
                            {
                                "Key":"phase",
                                "Value":"\"response\""
                            },
                            {
                                "Key":"code",
                                "Value":"\"ngx.header['foo-response'] = 'bar-response'\""
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 3: Create security policy and server group",
            "Skip": false,
            "Steps":[
                {
                    "Name":"Step: User can create security policy with attached edge functions",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"api-security-policies",
                        "Path":"/test-sp"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"map",
                                "Value":"[{\"id\": \"__default_entry__\",\"match\": \"/\",\"name\": \"default\",\"acl_profile\": \"__acldefault__\",\"content_filter_profile\": \"__defaultcontentfilter__\",\"backend_id\": \"__default__\",\"acl_active\": false,\"content_filter_active\": false,\"limit_ids\": [],\"cloud_functions\": []}, {\"id\": \"request\", \"name\": \"request\", \"match\": \"/request\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [\"ef_request\"], \"content_filter_profile\": \"__defaultcontentfilter__\", \"content_filter_active\": true, \"limit_ids\": []}, {\"id\": \"response\", \"name\": \"response\", \"match\": \"/response\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [\"ef_response\"], \"content_filter_profile\": \"__defaultcontentfilter__\", \"content_filter_active\": true, \"limit_ids\": []}]"
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: Create new server group 'test.site' ",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"api-server-groups",
                        "Path":"test-site/"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"server_names",
                                "Value":"[\"test.site\"]"
                            },
                            {
                                "Key":"security_policy",
                                "Value":"\"test-sp\""
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "ID":"publish-changes",
                    "Skip":false
                },
                {
                    "ID":"wait-for-publish",
                    "Skip":false
                }
            ]
        },
        {
            "Name": "Test 4: Send traffics",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Send Traffic 1 to path '/request'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/request"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''",
                        "Headers": [
                            {
                                "Key": "foo-request",
                                "Value": "bar-request"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Send Traffic 2 to path '/response'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/response"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''",
                        "Headers": [
                        {
                            "Key": "foo-response",
                            "Value": "bar-response"
                        }
                    ]
                    }
                }
            ]
        },
        {
            "Name": "Test 5: Wait for logs",
            "Skip": false,
            "Steps": [
                {
                    "ID": "wait-for-logs",
                    "Skip": false
                }
            ]
        },
        {
            "Name": "Test 6: Check logs",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs from path '/request'",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /request, status = 200, timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "edge-function-name:ef-request"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "edge-function"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Get Logs from path '/response'",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /response, status = 200, timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "edge-function-name:ef-response"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "edge-function"
                            }
                        ]
                    }
                }
            ]
        }
    ]
}