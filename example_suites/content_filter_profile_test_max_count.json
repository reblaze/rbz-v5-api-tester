{
    "Name": "TA 1285 Content filter profile test max count",
    "Skip": false,
    "Tests": [
        {
            "Name": "Test 1: Check enable/disable toggle in Headers/Cookies/Arguments",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Create new content filter profile with name `cfr_headers_check_toggle`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_headers_check_toggle"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_headers_check_toggle\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_headers_check_toggle\""
                            },
                            {
                                "Key": "headers",
                                "Value": "{\"enable_max_count\": true, \"enable_max_length\": true, \"max_count\": 42, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: User can check header`s toggle in filter rule profile `cfr_headers_check_toggle`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_headers_check_toggle"
                    },
                    "Method": "GET",
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "name",
                                "Value": "cfr_headers_check_toggle"
                            },
                            {
                                "Key": "id",
                                "Value": "cfr_headers_check_toggle"
                            },
                            {
                                "Key": "headers",
                                "Value": "{'enable_max_count': True, 'enable_max_length': True, 'max_count': 42, 'max_length': 1024, 'names': [], 'regex': []}"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new filter rule profile with name `cfr_cookies_check_toggle`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_cookies_check_toggle"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_cookies_check_toggle\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_cookies_check_toggle\""
                            },
                            {
                                "Key": "cookies",
                                "Value": "{\"enable_max_count\": true, \"enable_max_length\": true, \"max_count\": 42, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: User can check header`s toggle in filter rule profile `cfr_headers_check_toggle`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_cookies_check_toggle"
                    },
                    "Method": "GET",
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "name",
                                "Value": "cfr_cookies_check_toggle"
                            },
                            {
                                "Key": "id",
                                "Value": "cfr_cookies_check_toggle"
                            },
                            {
                                "Key": "cookies",
                                "Value": "{'enable_max_count': True, 'enable_max_length': True, 'max_count': 42, 'max_length': 1024, 'names': [], 'regex': []}"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new filter rule profile with name `cfr_args_check_toggle`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_args_check_toggle"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_args_check_toggle\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_args_check_toggle\""
                            },
                            {
                                "Key": "args",
                                "Value": "{\"enable_max_count\": true, \"enable_max_length\": true, \"max_count\": 512, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: User can check header`s toggle in filter rule profile `cfr_headers_check_toggle`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_args_check_toggle"
                    },
                    "Method": "GET",
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "name",
                                "Value": "cfr_args_check_toggle"
                            },
                            {
                                "Key": "id",
                                "Value": "cfr_args_check_toggle"
                            },
                            {
                                "Key": "args",
                                "Value": "{'enable_max_count': True, 'enable_max_length': True, 'max_count': 512, 'max_length': 1024, 'names': [], 'regex': []}"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 2: Headers: `Max count` field validations",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Create new filter rule profile with name `cfr_headers_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_headers_max_count"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_headers_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_headers_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Set headers max count '0' in filter rule profile `cfr_headers_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_headers_max_count"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_headers_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_headers_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "headers",
                                "Value": "{\"enable_max_count\": true, \"enable_max_length\": false, \"max_count\": 0, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "status-code"
                    }
                },
                {
                    "Name": "Step: Set headers max count '-1' number in filter rule profile `cfr_headers_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_headers_max_count"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_headers_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_headers_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "headers",
                                "Value": "{\"enable_max_count\": true, \"enable_max_length\": false, \"max_count\": -1, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "status-code"
                    }
                },
                {
                    "Name": "Step: Set headers max count '1.25' number in filter rule profile `cfr_headers_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_headers_max_count"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_headers_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_headers_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "headers",
                                "Value": "{\"enable_max_count\": true, \"enable_max_length\": false, \"max_count\": 1.25, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "status-code"
                    }
                },
                {
                    "Name": "Step: Set header`s max count `text` value in filter rule profile `cfr_headers_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_headers_max_count"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_headers_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_headers_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "headers",
                                "Value": "{\"enable_max_count\": true, \"enable_max_length\": false, \"max_count\": \"text\", \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "status-code"
                    }
                }
            ]
        },
        {
            "Name": "Test 3: Cookies: `Max count` field validations",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Create new filter rule profile with name `cfr_cookies_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_cookies_max_count"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_cookies_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_cookies_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Set cookies max count '0' in filter rule profile `cfr_cookies_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_cookies_max_count"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_cookies_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_cookies_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "cookies",
                                "Value": "{\"enable_max_count\": false, \"enable_max_length\": false, \"max_count\": 0, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "status-code"
                    }
                },
                {
                    "Name": "Step: Set cookies max count '-1' number in filter rule profile `cfr_cookies_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_cookies_max_count"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_cookies_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_cookies_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "cookies",
                                "Value": "{\"enable_max_count\": false, \"enable_max_length\": false, \"max_count\": -1, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "status-code"
                    }
                },
                {
                    "Name": "Step: Set cookies max count '1.25' number in filter rule profile `cfr_cookies_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_cookies_max_count"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_cookies_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_cookies_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "cookies",
                                "Value": "{\"enable_max_count\": false, \"enable_max_length\": false, \"max_count\": 1.25, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "status-code"
                    }
                },
                {
                    "Name": "Step: Set cookies max count `text` value in filter rule profile `cfr_cookies_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_cookies_max_count"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_cookies_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_cookies_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "cookies",
                                "Value": "{\"enable_max_count\": false, \"enable_max_length\": false, \"max_count\": \"text\", \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "status-code"
                    }
                }
            ]
        },
        {
            "Name": "Test 4: Arguments: `Max count` field validations",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Create new filter rule profile with name `cfr_args_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_args_max_count"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_args_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_args_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Set args max count '0' in filter rule profile `cfr_args_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_args_max_count"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_args_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_args_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "args",
                                "Value": "{\"enable_max_count\": false, \"enable_max_length\": false, \"max_count\": 0, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "status-code"
                    }
                },
                {
                    "Name": "Step: Set args max count '-1' number in filter rule profile `cfr_args_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_args_max_count"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_args_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_args_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "args",
                                "Value": "{\"enable_max_count\": false, \"enable_max_length\": false, \"max_count\": -1, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "status-code"
                    }
                },
                {
                    "Name": "Step: Set args max count '1.25' number in filter rule profile `cfr_args_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_args_max_count"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_args_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_args_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "args",
                                "Value": "{\"enable_max_count\": false, \"enable_max_length\": false, \"max_count\": 1.25, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "status-code"
                    }
                },
                {
                    "Name": "Step: Set args max count `text` value in filter rule profile `cfr_args_max_count`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_args_max_count"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_args_max_count\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_args_max_count\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "args",
                                "Value": "{\"enable_max_count\": false, \"enable_max_length\": false, \"max_count\": \"text\", \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "400",
                        "Type": "status-code"
                    }
                }
            ]
        },
        {
            "Name": "Test 5: Create content filter profiles",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Create content filter profile id: `15_headers_on`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/15_headers_on"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"15_headers_on\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"15_headers_on\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "headers",
                                "Value": "{\"names\": [],\"regex\": [],\"max_count\": 15,\"enable_max_count\": true,\"max_length\": 1024,\"enable_max_length\": true}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create content filter profile id: `15_headers_off`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/15_headers_off"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"15_headers_off\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"15_headers_off\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "headers",
                                "Value": "{\"enable_max_count\": false, \"enable_max_length\": true, \"max_count\": 15, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create content filter profile id: `4_cookies_on`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/4_cookies_on"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"4_cookies_on\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"4_cookies_on\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "cookies",
                                "Value": "{\"enable_max_count\": true, \"enable_max_length\": true, \"max_count\": 4, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create content filter profile id: `4_cookies_off`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/4_cookies_off"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"4_cookies_off\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"4_cookies_off\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "cookies",
                                "Value": "{\"enable_max_count\": false, \"enable_max_length\": true, \"max_count\": 4, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create content filter profile id: `4_args_on`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/4_args_on"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"4_args_on\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"4_args_on\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "args",
                                "Value": "{\"enable_max_count\": true, \"enable_max_length\": true, \"max_count\": 4, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create content filter profile id: `4_args_off`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/4_args_off"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"4_args_off\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"4_args_off\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"content-filter-test\"]"
                            },
                            {
                                "Key": "args",
                                "Value": "{\"enable_max_count\": false, \"enable_max_length\": true, \"max_count\": 4, \"max_length\": 1024,\"names\": [],\"regex\": []}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 6: Create security policy ",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: User can create security policy with attached content filter profiles",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-security-policies",
                        "Path": "/test-sp"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test-sp\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test-sp\""
                            },
                            {
                                "Key": "map",
                                "Value": "[{\"id\":\"__root_entry__\",\"name\":\"__root__\",\"match\":\"^/(\\\\W.*)?$\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"__default_entry__\",\"name\":\"__default__\",\"match\":\"/\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"15-headers-on\",\"name\":\"15-headers-on\",\"match\":\"/15-headers-on\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"15_headers_on\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"15-headers-off\",\"name\":\"15-headers-off\",\"match\":\"/15-headers-off\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"15_headers_off\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"4-cookies-on\",\"name\":\"4-cookies-on\",\"match\":\"/4-cookies-on\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"4_cookies_on\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"4-cookies-off\",\"name\":\"4-cookies-off\",\"match\":\"/4-cookies-off\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"4_cookies_off\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"4-args-on\",\"name\":\"4-args-on\",\"match\":\"/4-args-on\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"4_args_on\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"4-args-off\",\"name\":\"4-args-off\",\"match\":\"/4-args-off\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"4_args_off\",\"content_filter_active\":true,\"limit_ids\":[]}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new server group 'test.site' ",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-server-groups",
                        "Path": "/test-site"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test-site\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test-site\""
                            },
                            {
                                "Key": "server_names",
                                "Value": "[\"test.site\"]"
                            },
                            {
                                "Key": "security_policy",
                                "Value": "\"test-sp\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "ID": "publish-changes",
                    "Skip": false
                },
                {
                    "ID": "wait-for-publish",
                    "Skip": false
                }
            ]
        },
        {
            "Name": "Test 7: Send traffics ",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Send Traffic 1 to path `/15-headers-on` with less then 15 headers",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/15-headers-on"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "qa1",
                            "Value": "test1"
                        },
                        {
                            "Key": "qa2",
                            "Value": "test2"
                        },
                        {
                            "Key": "qa3",
                            "Value": "test3"
                        },
                        {
                            "Key": "qa4",
                            "Value": "test4"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 2 to path `/15-headers-on` more then 15 headers",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/15-headers-on"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "qa1",
                            "Value": "test1"
                        },
                        {
                            "Key": "qa2",
                            "Value": "test2"
                        },
                        {
                            "Key": "qa3",
                            "Value": "test3"
                        },
                        {
                            "Key": "qa4",
                            "Value": "test4"
                        },
                        {
                            "Key": "qa5",
                            "Value": "test5"
                        },
                        {
                            "Key": "qa6",
                            "Value": "test6"
                        },
                        {
                            "Key": "qa7",
                            "Value": "test7"
                        },
                        {
                            "Key": "qa8",
                            "Value": "test8"
                        },
                        {
                            "Key": "qa9",
                            "Value": "test9"
                        },
                        {
                            "Key": "qa10",
                            "Value": "test10"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 3 to path `/15-headers-off` more then 15 headers",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/15-headers-off"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "qa1",
                            "Value": "test1"
                        },
                        {
                            "Key": "qa2",
                            "Value": "test2"
                        },
                        {
                            "Key": "qa3",
                            "Value": "test3"
                        },
                        {
                            "Key": "qa4",
                            "Value": "test4"
                        },
                        {
                            "Key": "qa5",
                            "Value": "test5"
                        },
                        {
                            "Key": "qa6",
                            "Value": "test6"
                        },
                        {
                            "Key": "qa7",
                            "Value": "test7"
                        },
                        {
                            "Key": "qa8",
                            "Value": "test8"
                        },
                        {
                            "Key": "qa9",
                            "Value": "test9"
                        },
                        {
                            "Key": "qa10",
                            "Value": "test10"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 4 to path `/4-cookies-on` with 2 cookies",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/4-cookies-on"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "foo=book; boo=go"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 5 to path `/4-cookies-on` with 4 cookies",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/4-cookies-on"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "foo=book; boo=go; goo=hook; hoo=fook"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 6 to path `/4-cookies-on` with 5 cookies",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/4-cookies-on"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "foo=book; boo=go; goo=hook; hoo=fook; koo=cook"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 7 to path `/4-cookies-off` with 5 cookies",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/4-cookies-off"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "foo=book; boo=go; goo=hook; hoo=fook; koo=cook"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 8 to path `/4-args-on` with 2 args",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/4-args-on"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "qa1",
                            "Value": "test1"
                        },
                        {
                            "Key": "qa2",
                            "Value": "test2"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 9 to path `/4-args-on` with 4 args",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/4-args-on"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "qa1",
                            "Value": "test1"
                        },
                        {
                            "Key": "qa2",
                            "Value": "test2"
                        },
                        {
                            "Key": "qa3",
                            "Value": "test3"
                        },
                        {
                            "Key": "qa4",
                            "Value": "test4"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 10 to path `/4-args-on` with 5 args",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/4-args-on"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "qa1",
                            "Value": "test1"
                        },
                        {
                            "Key": "qa2",
                            "Value": "test2"
                        },
                        {
                            "Key": "qa3",
                            "Value": "test3"
                        },
                        {
                            "Key": "qa4",
                            "Value": "test4"
                        },
                        {
                            "Key": "qa5",
                            "Value": "test5"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 11 to path `/4-args-off` with 5 args",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/4-args-off"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "qa1",
                            "Value": "test1"
                        },
                        {
                            "Key": "qa2",
                            "Value": "test2"
                        },
                        {
                            "Key": "qa3",
                            "Value": "test3"
                        },
                        {
                            "Key": "qa4",
                            "Value": "test4"
                        },
                        {
                            "Key": "qa5",
                            "Value": "test5"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        },
        {
            "Name": "Test 8: Wait for logs",
            "Skip": false,
            "Steps": [
                {
                    "ID": "wait-for-logs",
                    "Skip": false
                }
            ]
        },
        {
            "Name": "Test 9: Check logs from path '/15-headers-on'",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs path '/15-headers-on'",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /15-headers-on, status = 473, timestamp between @@NOW(-5minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "content-filter-test"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "action:content-filter-block"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "contentfiltername:15-headers-on"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 10: Check logs from path '/4-cookies-on'",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs path '/4-cookies-on'",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /4-cookies-on, status = 473, timestamp between @@NOW(-5minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "content-filter-test"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "action:content-filter-block"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "contentfiltername:4-cookies-on"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 11: Check logs from path '/4-args-on'",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs path '/4-args-on'",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /4-args-on, status = 473, timestamp between @@NOW(-5minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "content-filter-test"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "action:content-filter-block"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "contentfiltername:4-args-on"
                            }
                        ]
                    }
                }
            ]
        }
    ]
}