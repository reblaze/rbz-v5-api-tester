{
    "Name": "TA 1368 Content filter rules functional tests",
    "Skip": false,
    "Tests": [
        {
            "Name": "Test 1: Create new content filter rule profile",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Create new content filter profile with name `cfr_profile_test`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-profiles",
                        "Path": "/cfr_profile_test"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cfr_profile_test\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cfr_profile_test\""
                            },
                            {
                                "Key": "ignore_alphanum",
                                "Value": "false"
                            },
                            {
                                "Key": "active",
                                "Value": "[\"cf-rule-name:200039\", \"cf-rule-name:100016\",\"cf-rule-risk:5\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 2: Create filter rules",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: User can create a filter rule with name 'cf_test_one_tag'",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-rules",
                        "Path": "/cf_test_one_tag"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cf_test_one_tag\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cf_test_one_tag\""
                            },
                            {
                                "Key": "category",
                                "Value": "\"test-category\""
                            },
                            {
                                "Key": "subcategory",
                                "Value": "\"test-subcategory\""
                            },
                            {
                                "Key": "msg",
                                "Value": "\"my test one tag\""
                            },
                            {
                                "Key": "operand",
                                "Value": "\"test_one_tag\""
                            },
                            {
                                "Key": "risk",
                                "Value": "5"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"test_one_tag\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: User can create a filter rule with name 'cf_test_two_tags'",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-content-filter-rules",
                        "Path": "/cf_test_two_tags"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"cf_test_two_tags\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"cf_test_two_tags\""
                            },
                            {
                                "Key": "category",
                                "Value": "\"test-category\""
                            },
                            {
                                "Key": "subcategory",
                                "Value": "\"test-subcategory\""
                            },
                            {
                                "Key": "msg",
                                "Value": "\"my test two tags\""
                            },
                            {
                                "Key": "operand",
                                "Value": "\"test_two_tags\""
                            },
                            {
                                "Key": "risk",
                                "Value": "5"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"test_two_tags1\", \"test_two_tags2\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 3: Create security policy",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: User can create security policy `test-sp`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-security-policies",
                        "Path": "/test-sp"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test-sp\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test-sp\""
                            },
                            {
                                "Key": "map",
                                "Value": "[{\"id\":\"__root_entry__\",\"name\":\"__root__\",\"match\":\"^/(\\\\W.*)?$\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"__default_entry__\",\"name\":\"__default__\",\"match\":\"/\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\": \"test\",\"match\": \"/test\",\"name\": \"test\",\"acl_profile\": \"__acldefault__\",\"content_filter_profile\": \"cfr_profile_test\",\"backend_id\": \"__default__\",\"acl_active\": true, \"content_filter_active\": true,\"limit_ids\": [],\"cloud_functions\": []}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 4: Create server group and publish",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Create new server group 'test.site' ",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-server-groups",
                        "Path": "/test-site"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test-site\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test-site\""
                            },
                            {
                                "Key": "server_names",
                                "Value": "[\"test.site\"]"
                            },
                            {
                                "Key": "security_policy",
                                "Value": "\"test-sp\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "ID": "publish-changes",
                    "Skip": false
                },
                {
                    "ID": "wait-for-publish",
                    "Skip": false
                }
            ]
        },
        {
            "Name": "Test 5: Send traffics",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Send Traffic 1 to 'curl [url]a?b=<area>'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/a"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "b",
                            "Value": "<area>"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 2 to 'curl [url]<area>'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/<area>"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 3 to 'curl [url] -d <area>=a'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "1-3"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "<area>",
                            "Value": "a"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 4 to 'curl [url] -d 'a=<area>''",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "1-4"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "a",
                            "Value": "<area>"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 5 to 'curl [url] -H 'xp_makecab=a'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "xp_makecab",
                            "Value": "a"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 6 to 'curl [url] -H 'a=xp_makecab'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "a",
                            "Value": "xp_makecab"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 7 to 'curl [url] -b 'a=xp_makecab'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "cookie",
                            "Value": "a=xp_makecab"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 8 to 'curl [url]-b xp_makecab=a'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "cookie",
                            "Value": "xp_makecab=a"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 9 to 'curl [url]?a=test_one_tag'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "a",
                            "Value": "test_one_tag"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 10 to 'curl [url]?a=foo'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "a",
                            "Value": "foo"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 11 to 'curl [url]?a=test_two_tags'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "a",
                            "Value": "test_two_tags"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                }
            ]
        },
        {
            "Name": "Test 6: wait for logs",
            "Skip": false,
            "Steps": [
                {
                    "ID": "wait-for-logs",
                    "Skip": false
                }
            ]
        },
        {
            "Name": "Test 7: Check logs",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get logs from path /a",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "filters",
                            "Value": "path = /a, status != 403, timestamp between @@NOW(-4minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/reason",
                                "Value": "Block - content filter 200039[lvl5] - default contentfilter - [URI argument b=<area>]"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Get logs from path /<area>",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "filters",
                            "Value": "path = /%3Carea%3E, status != 403, timestamp between @@NOW(-4minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/reason",
                                "Value": "Block - content filter 200039[lvl5] - default contentfilter - [uri]"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Get logs from path /1-3",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "filters",
                            "Value": "path = /1-3, status != 403, timestamp between @@NOW(-4minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/reason",
                                "Value": "Block - content filter 200039[lvl5] - default contentfilter - [URI argument <area>=a]"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Get logs from path /1-4",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "filters",
                            "Value": "path = /1-4, status != 403, timestamp between @@NOW(-4minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/reason",
                                "Value": "Block - content filter 200039[lvl5] - default contentfilter - [URI argument a=<area>]"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Get logs from path /test",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "filters",
                            "Value": "path = /test, status = 473, timestamp between @@NOW(-4minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/5/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/5/reason",
                                "Value": "Block - content filter 100016[lvl5] - cfr_profile_test - [header xp_makecab=a]"
                            },
                            {
                                "Key": "data/results/4/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/4/reason",
                                "Value": "Block - content filter 100016[lvl5] - cfr_profile_test - [header a=xp_makecab]"
                            },
                            {
                                "Key": "data/results/3/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/3/reason",
                                "Value": "Block - content filter 100016[lvl5] - cfr_profile_test - [cookie a=xp_makecab]"
                            },
                            {
                                "Key": "data/results/2/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/2/reason",
                                "Value": "Block - content filter 100016[lvl5] - cfr_profile_test - [cookie xp_makecab=a]"
                            },
                            {
                                "Key": "data/results/1/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/1/reason",
                                "Value": "Block - content filter cf_test_one_tag[lvl5] - cfr_profile_test - [URI argument a=test_one_tag]"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/reason",
                                "Value": "Block - content filter cf_test_two_tags[lvl5] - cfr_profile_test - [URI argument a=test_two_tags]"
                            }
                        ]
                    }
                }
            ]
        }
    ]
}