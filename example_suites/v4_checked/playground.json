{
    "Name": "Playground Test Suite",
    "Skip": true,
    "Tests": [
        {
            "Name": "My Test",
            "Skip": false,
            "Steps": [
                {
                    "ID": "add-my-ip-to-trusted-source",
                    "Skip": false
                },
                {
                    "Name": "Create Rate limit with Name: 'My rate limit'",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-rate-limits",
                        "Path": "/api_tester_cccbbbaaa"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"My rate limit\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"api_tester_cccbbbaaa\""
                            },
                            {
                                "Key": "active",
                                "Value": "true"
                            },
                            {
                                "Key": "threshold",
                                "Value": "1"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Add Rate limit with Name: 'My rate limit' to default Security policy",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-security-policies",
                        "Path": "/__default__"
                    },
                    "Method": "PUT",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"__default__\""
                            },
                            {
                                "Key": "map",
                                "Value": "[{\"id\": \"__root_entry__\", \"name\": \"__root__\", \"match\": \"^/(\\\\W.*)?$\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"__defaultcontentfilter__\", \"content_filter_active\": true, \"limit_ids\": []},{ \"id\": \"__default_entry__\", \"name\": \"__default__\", \"match\": \"/\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"__defaultcontentfilter__\", \"content_filter_active\": true, \"limit_ids\": [\"api_tester_cccbbbaaa\"]}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully updated entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "List rate limits",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-rate-limits",
                        "Path": ""
                    },
                    "Method": "GET",
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [

                                {
                                    "Key": "items",
                                    "Value": "[{\"id\": \"rl-asn-path-ddos\", \"name\": \"global rate limit asn per host+path 10k/60\", \"description\": \"10K+ requests per minute\", \"global\": true, \"active\": true, \"tags\": [\"rtc:ddos\"], \"timeframe\": 60, \"threshold\": 10000, \"action\": \"action-monitor\", \"include\": [], \"exclude\": [], \"key\": [{\"attrs\": \"asn\"}, {\"headers\": \"host\"}, {\"attrs\": \"path\"}], \"pairwith\": {\"self\": \"self\"}}, {\"id\": \"rl-session-host-ddos\", \"name\": \"global rate limit session per host 300/180\", \"description\": \"300 requests per 3 minutes\", \"global\": true, \"active\": true, \"tags\": [\"rtc:ddos\"], \"timeframe\": 180, \"threshold\": 300, \"action\": \"action-monitor\", \"include\": [], \"exclude\": [\"static-content\"], \"key\": [{\"attrs\": \"session\"}, {\"headers\": \"host\"}], \"pairwith\": {\"self\": \"self\"}}, {\"id\": \"rl-session-host-ddos-static\", \"name\": \"global rate limit session per host 400/180\", \"description\": \"400 requests per 3 minutes for static content\", \"global\": true, \"active\": true, \"tags\": [\"rtc:ddos\"], \"timeframe\": 180, \"threshold\": 400, \"action\": \"action-monitor\", \"include\": [\"static-content\"], \"exclude\": [], \"key\": [{\"attrs\": \"session\"}, {\"headers\": \"host\"}], \"pairwith\": {\"self\": \"self\"}}, {\"id\": \"rl-session-path-ddos\", \"name\": \"global rate limit session per path 60/60\", \"description\": \"60 requests per minute\", \"global\": true, \"active\": true, \"tags\": [\"rtc:ddos\"], \"timeframe\": 60, \"threshold\": 60, \"action\": \"action-monitor\", \"include\": [], \"exclude\": [], \"key\": [{\"attrs\": \"session\"}, {\"headers\": \"host\"}, {\"attrs\": \"path\"}], \"pairwith\": {\"self\": \"self\"}}, {\"id\": \"rl-session-cross-ip\", \"name\": \"global rate limit session per ip 5/3600\", \"description\": \"5 unique IPs per hour\", \"global\": true, \"active\": false, \"tags\": [\"rtc:account-takeover\", \"owasp-api04-lroarl\", \"owasp-app07-iaaf\"], \"timeframe\": 3600, \"threshold\": 5, \"action\": \"action-monitor\", \"include\": [], \"exclude\": [], \"key\": [{\"attrs\": \"session\"}], \"pairwith\": {\"attrs\": \"ip\"}}, {\"id\": \"rl-session-cross-asn\", \"name\": \"global rate limit session per asn 2/3600\", \"description\": \"2 unique ASNs per hour\", \"global\": true, \"active\": false, \"tags\": [\"rtc:account-takeover\", \"owasp-api04-lroarl\", \"owasp-app07-iaaf\"], \"timeframe\": 3600, \"threshold\": 2, \"action\": \"action-monitor\", \"include\": [], \"exclude\": [], \"key\": [{\"attrs\": \"session\"}], \"pairwith\": {\"attrs\": \"asn\"}}, {\"id\": \"rl-session-cross-country\", \"name\": \"global rate limit session per country 2/3600\", \"description\": \"2 unique countries per hour\", \"global\": true, \"active\": false, \"tags\": [\"rtc:account-takeover\", \"owasp-api04-lroarl\", \"owasp-app07-iaaf\"], \"timeframe\": 3600, \"threshold\": 2, \"action\": \"action-monitor\", \"include\": [], \"exclude\": [], \"key\": [{\"attrs\": \"session\"}], \"pairwith\": {\"attrs\": \"country\"}}, {\"id\": \"rl-rbzid-cross-ip\", \"name\": \"global rate limit rbzid per ip 5/3600\", \"description\": \"5 unique IPs per hour\", \"global\": true, \"active\": false, \"tags\": [\"rtc:account-takeover\", \"owasp-api04-lroarl\", \"owasp-app07-iaaf\"], \"timeframe\": 3600, \"threshold\": 5, \"action\": \"action-monitor\", \"include\": [], \"exclude\": [], \"key\": [{\"cookies\": \"rbzid\"}], \"pairwith\": {\"attrs\": \"ip\"}}, {\"id\": \"rl-rbzid-cross-asn\", \"name\": \"global rate limit rbzid per asn 2/3600\", \"description\": \"2 unique ASNs per hour\", \"global\": true, \"active\": false, \"tags\": [\"rtc:account-takeover\", \"owasp-api04-lroarl\", \"owasp-app07-iaaf\"], \"timeframe\": 3600, \"threshold\": 2, \"action\": \"action-monitor\", \"include\": [], \"exclude\": [], \"key\": [{\"cookies\": \"rbzid\"}], \"pairwith\": {\"attrs\": \"asn\"}}, {\"id\": \"rl-rbzid-cross-country\", \"name\": \"global rate limit rbzid per country 2/3600\", \"description\": \"2 unique ips per hour\", \"global\": true, \"active\": false, \"tags\": [\"rtc:account-takeover\", \"owasp-api04-lroarl\", \"owasp-app07-iaaf\"], \"timeframe\": 3600, \"threshold\": 2, \"action\": \"action-monitor\", \"include\": [], \"exclude\": [], \"key\": [{\"cookies\": \"rbzid\"}], \"pairwith\": {\"attrs\": \"country\"}}, {\"id\": \"api_tester_cccbbbaaa\", \"name\": \"My rate limit\", \"description\": \"New Rate Limit Rule Description and Remarks\", \"global\": false, \"active\": true, \"last_activated\": 1710914909, \"timeframe\": 60, \"threshold\": 1, \"action\": \"action-rate-limit-block\", \"is_action_ban\": false, \"ttl\": 3600, \"include\": [\"all\"], \"exclude\": [], \"key\": [{\"attrs\": \"securitypolicyname\"}, {\"attrs\": \"securitypolicyentryname\"}, {\"attrs\": \"session\"}], \"pairwith\": {\"self\": \"self\"}, \"tags\": []}]"
                                }
                        ]
                    }
                },
                {
                    "ID": "publish-changes",
                    "Skip": false
                },
                {
                    "ID": "wait-for-publish",
                    "Skip": false
                },
                {
                    "Name": "Send Traffic using GET method",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": ""
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "default.site"
                        },
                        {
                            "Key": "test",
                            "Value": "366"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "test=my-cookie"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "arg1",
                            "Value": "my first arg"
                        },
                        {
                            "Key": "arg2",
                            "Value": "my second arg"
                        },
                        {
                            "Key": "arg3",
                            "Value": "long arg aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Send Traffic using POST method",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "my-test"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "default.site"
                        },
                        {
                            "Key": "test",
                            "Value": "366"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "test=my-cookie"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "arg1",
                            "Value": "my first arg"
                        },
                        {
                            "Key": "arg2",
                            "Value": "my second arg"
                        },
                        {
                            "Key": "arg3",
                            "Value": "long arg aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Send Traffic using PUT method",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": ""
                    },
                    "Method": "PUT",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "default.site"
                        },
                        {
                            "Key": "test",
                            "Value": "366"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "test=my-cookie"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "arg1",
                            "Value": "my first arg"
                        },
                        {
                            "Key": "arg2",
                            "Value": "my second arg"
                        },
                        {
                            "Key": "arg3",
                            "Value": "long arg aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
                        }
                    ],
                    "Files": [
                        {
                            "Key": "file1",
                            "Value": "./test_files/1.png"
                        },
                        {
                            "Key": "file2",
                            "Value": "./test_files/2.png"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Send Traffic using DELETE method",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "my-test-2"
                    },
                    "Method": "DELETE",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "default.site"
                        },
                        {
                            "Key": "test",
                            "Value": "366"
                        },
                        {
                            "Key": "Cookie",
                            "Value": "test=my-cookie"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "arg1",
                            "Value": "my first arg @@ip@@"
                        },
                        {
                            "Key": "arg2",
                            "Value": "my second arg"
                        },
                        {
                            "Key": "arg3",
                            "Value": "long arg aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
                        }
                    ],
                    "Expected": {
                        "Code": "471",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "ID": "wait-for-logs",
                    "Skip": false
                },
                {
                    "Name": "Get Logs",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path=\"/my-test-2\", timestamp between @@NOW(-1minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "args:3"
                            },
                            {
                                "Key": "data/results/0/gf_triggers/0/trigger_name",
                                "Value": "API Discovery"
                            },
                            {
                                "Key": "data/results/0/gf_triggers/0/action",
                                "Value": "monitor"
                            }
                        ]
                    }
                },
                {
                    "Name": "run command on proxy pod",
                    "Skip": false,
                    "Type": "kubernetes",
                    "Arguments": [
                        {
                            "Key": "container",
                            "Value": "curieproxy"
                        },
                        {
                            "Key": "pod",
                            "Value": ".*-proxy-@@branch@@-.*"
                        },
                        {
                            "Key": "cluster",
                            "Value": "data"
                        },
                        {
                            "Key": "operation",
                            "Value": "run"
                        },
                        {
                            "Key": "command",
                            "Value": "nginx -T > /tmp/res-nginx-t.txt"
                        }
                    ]
                },
                {
                    "Name": "copy file from proxy pod",
                    "Skip": false,
                    "Type": "kubernetes",
                    "Arguments": [
                        {
                            "Key": "container",
                            "Value": "curieproxy"
                        },
                        {
                            "Key": "pod",
                            "Value": ".*-proxy-@@branch@@-.*"
                        },
                        {
                            "Key": "cluster",
                            "Value": "data"
                        },
                        {
                            "Key": "operation",
                            "Value": "copy"
                        },
                        {
                            "Key": "source",
                            "Value": "/tmp/res-nginx-t.txt"
                        },
                        {
                            "Key": "destination",
                            "Value": "./test_files/res-nginx-t.txt"
                        }
                    ]
                },
                {
                    "Name": "check that client_body_timeout value is 30 in copied file",
                    "Skip": false,
                    "Type": "python",
                    "Code": [
                        "import re",
                        "try:",
                        "   filename = './test_files/res-nginx-t.txt'",
                        "   with open(filename, 'r') as file:",
                        "       for line in file:",
                        "           pattern = r'^\\s*client_body_timeout\\s+30;$'",
                        "           match = re.match(pattern, line)",
                        "           if match:",
                        "               print(f'Line found: {line}')",
                        "               exit(0)",
                        "   print(f'regex: {pattern} not found in: {filename}')",
                        "   exit(1)",
                        "except FileNotFoundError:",
                        "   print(f'Error: File: {filename} not found')",
                        "   exit(1)"
                    ]
                }
            ]
        }
    ]
}