{
    "Name": "TA 1322 Flow control test include",
    "Skip": false,
    "Tests": [
        {
            "Name": "Test 1: Create a global filter and flow controls",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Create global filter 'gf-tag1'",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-global-filters",
                        "Path": "/gf-tag1"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"gf-tag1\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"gf-tag1\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"tag1\"]"
                            },
                            {
                                "Key": "active",
                                "Value": "true"
                            },
                            {
                                "Key": "rule",
                                "Value": "{\"relation\": \"OR\", \"entries\": [[\"headers\", [\"test\", \"tag\"], \"\"]]}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create a flow control 'fc-include'",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-flow-controls-policies",
                        "Path": "/fc-include"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"fc-include\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"fc-include\""
                            },
                            {
                                "Key": "include",
                                "Value": "[\"tag1\"]"
                            },
                            {
                                "Key": "active",
                                "Value": "true"
                            },
                            {
                                "Key": "timeframe",
                                "Value": "10"
                            },
                            {
                                "Key": "key",
                                "Value": "[{\"attrs\": \"ip\"}]"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"my-test-1322\"]"
                            },
                            {
                                "Key": "sequence",
                                "Value": "[{\"method\": \"GET\",\"uri\": \"/flowa\",\"cookies\": {},\"headers\": {\"host\": \"test.site\"},\"args\": {}},{\"method\": \"GET\",\"uri\": \"/flowb\",\"cookies\": {},\"headers\": {\"host\": \"test.site\"},\"args\": {}}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create a flow control 'fc-several-tags'",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-flow-controls-policies",
                        "Path": "/fc-several-tags"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"fc-several-tags\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"fc-several-tags\""
                            },
                            {
                                "Key": "include",
                                "Value": "[\"tag0\", \"tag1\", \"tag2\"]"
                            },
                            {
                                "Key": "active",
                                "Value": "true"
                            },
                            {
                                "Key": "timeframe",
                                "Value": "10"
                            },
                            {
                                "Key": "key",
                                "Value": "[{\"attrs\": \"ip\"}]"
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"my-test-1322\"]"
                            },
                            {
                                "Key": "sequence",
                                "Value": "[{\"method\": \"GET\",\"uri\": \"/flowc\",\"cookies\": {},\"headers\": {\"host\": \"test.site\"},\"args\": {}},{\"method\": \"GET\",\"uri\": \"/flowd\",\"cookies\": {},\"headers\": {\"host\": \"test.site\"},\"args\": {}}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 2: Create server group and security policy",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: User can create security policy with attached content filter profiles",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-security-policies",
                        "Path": "/test-sp"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test-sp\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test-sp\""
                            },
                            {
                                "Key": "map",
                                "Value": "[{\"id\":\"__root_entry__\",\"name\":\"__root__\",\"match\":\"^/(\\\\W.*)?$\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"__default_entry__\",\"name\":\"__default__\",\"match\":\"/\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new server group 'test.site' ",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-server-groups",
                        "Path": "/test-site"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test-site\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test-site\""
                            },
                            {
                                "Key": "server_names",
                                "Value": "[\"test.site\"]"
                            },
                            {
                                "Key": "security_policy",
                                "Value": "\"test-sp\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "ID": "publish-changes",
                    "Skip": false
                },
                {
                    "ID": "wait-for-publish",
                    "Skip": false
                }
            ]
        },
        {
            "Name": "Test 3: Send traffics",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Send Traffic 1 to /flowa -H 'host:test.site' -H 'test:tag'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/flowa"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "test",
                            "Value": "tag"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 2 to flowb -H 'host:test.site' -H 'test:tag'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/flowb"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "test",
                            "Value": "tag"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Skip": false,
                    "Type": "python",
                    "Code": [
                        "import time",
                        "time.sleep(10)"
                    ]
                },
                {
                    "Name": "Step: Send Traffic 3 to flowa -H 'host:test.site'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/flowa"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 4 to flowb -H 'host:test.site'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/flowb"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Skip": false,
                    "Type": "python",
                    "Code": [
                        "import time",
                        "time.sleep(10)"
                    ]
                },
                {
                    "Name": "Step: Send Traffic 5 to flowa -H 'host:test.site",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/flowa"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 6 to flowb -H 'host:test.site' -H 'test:tag'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/flowb"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "test",
                            "Value": "tag"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 7 to flowc -H 'host:test.site' -H 'test:tag'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/flowc"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "test",
                            "Value": "tag"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 8 to flowd -H 'host:test.site' -H 'test:tag'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/flowd"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "test",
                            "Value": "tag"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        },
        {
            "Name": "Test 3: Wait for logs",
            "Skip": false,
            "Steps": [
                {
                    "ID": "wait-for-logs",
                    "Skip": false
                }
            ]
        },
        {
            "Name": "Test 4: Check logs ",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs from path tags = 'my-test-1322'",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "tags = my-test-1322, status = 200, timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/path",
                                "Value": "/flowd"
                            },
                            {
                                "Key": "data/results/1/path",
                                "Value": "/flowb"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Get Logs from path tags != my-test-1322",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "tags != my-test-1322, status = 200, timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/path",
                                "Value": "/flowc"
                            },
                            {
                                "Key": "data/results/1/path",
                                "Value": "/flowb"
                            },
                            {
                                "Key": "data/results/2/path",
                                "Value": "/flowa"
                            },
                            {
                                "Key": "data/results/3/path",
                                "Value": "/flowb"
                            },
                            {
                                "Key": "data/results/4/path",
                                "Value": "/flowa"
                            },
                            {
                                "Key": "data/results/5/path",
                                "Value": "/flowa"
                            }
                        ]
                    }
                }
            ]
        }
    ]
}