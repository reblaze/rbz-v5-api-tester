{
    "Name": "TA 1279 ACL Allow",
    "Skip": false,
    "Tests": [
        {
            "Name": "Test 1: Create global filters",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: User can create global filter with name `gf1`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-global-filters",
                        "Path": "/gf1"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"gf1\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"gf1\""
                            },
                            {
                                "Key": "active",
                                "Value": "true"
                            },
                            {
                                "Key": "action",
                                "Value": "\"action-monitor\""
                            },
                            {
                                "Key": "tags",
                                "Value": "[\"tag1\"]"
                            },
                            {
                                "Key": "rule",
                                "Value": "{\"relation\": \"OR\", \"entries\": [[\"path\", \"/test123\", \"\"]]}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 2: Create ACL Profile",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: User can create ACL Profile with name `acl1`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-acl-profiles",
                        "Path": "/acl1"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Template": "aclprofile.template",
                        "Defaults": "aclprofile.defaults",
                        "Params": [
                            {
                                "Key": "name",
                                "Value": "\"acl1\""
                            },
                            {
                                "Key": "id",
                                "Value": "\"acl1\""
                            },
                            {
                                "Key": "allow",
                                "Value": "[\"tag1\"]"
                            },
                            {
                                "Key": "action",
                                "Value": "\"action-acl-block\""
                            },
                            {
                                "Key": "deny",
                                "Value": "[\"all\"]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 3: Create content filter profile and security policy",
            "Skip": false,
            "Steps": [
                  {
          "Name": "Step: Create new content filter profile with name `test_cfp`",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/test_cfp"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"test_cfp\""
              },
              {
                "Key": "name",
                "Value": "\"test_cfp\""
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
                {
                    "Name": "Step: User can create security policy `test-sp`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-security-policies",
                        "Path": "/test-sp"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test-sp\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test-sp\""
                            },
                            {
                                "Key": "map",
                                "Value": "[{\"id\": \"__default_entry__\",\"match\": \"/\",\"name\": \"default\",\"acl_profile\": \"__acldefault__\",\"content_filter_profile\": \"test_cfp\",\"backend_id\": \"__default__\",\"acl_active\": false, \"content_filter_active\": false,\"limit_ids\": [],\"cloud_functions\": []},{\"id\": \"test\",\"match\": \"/test\",\"name\": \"test\",\"acl_profile\": \"acl1\",\"content_filter_profile\": \"test_cfp\",\"backend_id\": \"__default__\",\"acl_active\": true,\"content_filter_active\": true,\"limit_ids\": [],\"cloud_functions\": []}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 4: Create server group and publish",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Create new server group 'test.site' ",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "api-server-groups",
                        "Path": "/test-site"
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test-site\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test-site\""
                            },
                            {
                                "Key": "server_names",
                                "Value": "[\"test.site\"]"
                            },
                            {
                                "Key": "security_policy",
                                "Value": "\"test-sp\""
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "201",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "message",
                                "Value": "Successfully created entry"
                            }
                        ]
                    }
                },
                {
                    "ID": "publish-changes",
                    "Skip": false
                },
                {
                    "ID": "wait-for-publish",
                    "Skip": false
                }
            ]
        },
        {
            "Name": "Test 5: Send traffics",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Send Traffic to path `/test`",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Expected": {
                        "Code": "472",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic to path `/test123`",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test123"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic to path `test123' -d a=<select>`",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test123"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "a",
                            "Value": "<select>"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        },
        {
            "Name": "Test 6: Wait for logs",
            "Skip": false,
            "Steps": [
                {
                    "ID": "wait-for-logs",
                    "Skip": false
                }
            ]
        },
        {
            "Name": "Test 7: Check logs from path '/test'",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs from path '/test'",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /test, status = 472, timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:472"
                            },
                            {
                                "Key": "data/results/0/reason",
                                "Value": "Block - acl Deny [\"all\"] - acl1 - [request]"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 8: Check logs from path '/test123'",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs from path '/test123'",
                    "Skip": false,
                    "API": {
                        "Base": "api-data",
                        "Path": "/logs"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /test123, status = 473, timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/reason",
                                "Value": "Block - content filter 200039[lvl5] - default contentfilter - [URI argument a=<select>]"
                            }
                        ]
                    }
                }
            ]
        }
    ]
}