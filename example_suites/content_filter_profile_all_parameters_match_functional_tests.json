{
  "Name": "Content filter profile - All parameters match functional tests",
  "Skip": false,
  "Tests": [
    {
      "Name": "Test: Create content filter profiles, security policy and server group",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Create content filter profile 'everything_unchecked'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/everything_unchecked"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"everything_unchecked\""
              },
              {
                "Key": "name",
                "Value": "\"everything_unchecked\""
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              },
              {
                "Key": "allsections",
                "Value": "{\"names\":[{\"type\":\"names\",\"key\":\"test\",\"reg\":\"<.*>\",\"restrict\":false,\"mask\":false,\"exclusions\":[],\"id\":\"everything_unchecked\"}],\"regex\":[],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create content filter profile 'restricted_checked'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/restricted_checked"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"restricted_checked\""
              },
              {
                "Key": "name",
                "Value": "\"restricted_checked\""
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              },
              {
                "Key": "allsections",
                "Value": "{\"names\":[{\"type\":\"names\",\"key\":\"test\",\"reg\":\"<.*>\",\"restrict\":true,\"mask\":false,\"exclusions\":[],\"id\":\"restricted_checked\"}],\"regex\":[],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create content filter profile 'restricted_masked_checked'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/restricted_masked_checked"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"restricted_masked_checked\""
              },
              {
                "Key": "name",
                "Value": "\"restricted_masked_checked\""
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              },
              {
                "Key": "allsections",
                "Value": "{\"names\":[{\"type\":\"names\",\"key\":\"test\",\"reg\":\"<.*>\",\"restrict\":true,\"mask\":true,\"exclusions\":[],\"id\":\"restricted_masked_checked\"}],\"regex\":[],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create content filter profile 'restricted_unchecked_masked_checked'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/restricted_unchecked_masked_checked"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"restricted_unchecked_masked_checked\""
              },
              {
                "Key": "name",
                "Value": "\"restricted_unchecked_masked_checked\""
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              },
              {
                "Key": "allsections",
                "Value": "{\"names\":[{\"type\":\"names\",\"key\":\"test\",\"reg\":\"<.*>\",\"restrict\":false,\"mask\":true,\"exclusions\":[],\"id\":\"restricted_unchecked_masked_checked\"}],\"regex\":[],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create content filter profile 'ignore_cf_rule_name_200039'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/ignore_cf_rule_name_200039"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"ignore_cf_rule_name_200039\""
              },
              {
                "Key": "name",
                "Value": "\"ignore_cf_rule_name_200039\""
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              },
              {
                "Key": "allsections",
                "Value": "{\"names\":[{\"type\":\"names\",\"key\":\"test\",\"reg\":\"<.*>\",\"restrict\":false,\"mask\":false,\"exclusions\":[\"cf-rule-name:200039\"],\"id\":\"ignore_cf_rule_name_200039\"}],\"regex\":[],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create content filter profile 'ignore_cf_rule_risk_5'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/ignore_cf_rule_risk_5"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"ignore_cf_rule_risk_5\""
              },
              {
                "Key": "name",
                "Value": "\"ignore_cf_rule_risk_5\""
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              },
              {
                "Key": "allsections",
                "Value": "{\"names\":[{\"type\":\"names\",\"key\":\"test\",\"reg\":\"<.*>\",\"restrict\":false,\"mask\":false,\"exclusions\":[\"cf-rule-risk:5\"],\"id\":\"ignore_cf_rule_risk_5\"}],\"regex\":[],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create content filter profile 'ignore_cf_rule_category_xss'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/ignore_cf_rule_category_xss"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"ignore_cf_rule_category_xss\""
              },
              {
                "Key": "name",
                "Value": "\"ignore_cf_rule_category_xss\""
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              },
              {
                "Key": "allsections",
                "Value": "{\"names\":[{\"type\":\"names\",\"key\":\"test\",\"reg\":\"<.*>\",\"restrict\":false,\"mask\":false,\"exclusions\":[\"cf-rule-category:xss\"],\"id\":\"ignore_cf_rule_category_xss\"}],\"regex\":[],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create content filter profile 'ignore_cf_rule_subcategory_tag_insertion'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/ignore_cf_rule_subcategory_tag_insertion"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"ignore_cf_rule_subcategory_tag_insertion\""
              },
              {
                "Key": "name",
                "Value": "\"ignore_cf_rule_subcategory_tag_insertion\""
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              },
              {
                "Key": "allsections",
                "Value": "{\"names\":[{\"type\":\"names\",\"key\":\"test\",\"reg\":\"<.*>\",\"restrict\":false,\"mask\":false,\"exclusions\":[\"cf-rule-subcategory:tag-insertion\"],\"id\":\"ignore_cf_rule_subcategory_tag_insertion\"}],\"regex\":[],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create content filter profile 'ignore_cf_all'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/ignore_cf_all"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"ignore_cf_all\""
              },
              {
                "Key": "name",
                "Value": "\"ignore_cf_all\""
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              },
              {
                "Key": "allsections",
                "Value": "{\"names\":[{\"type\":\"names\",\"key\":\"test\",\"reg\":\"<.*>\",\"restrict\":false,\"mask\":false,\"exclusions\":[\"cf-all\"],\"id\":\"ignore_cf_all\"}],\"regex\":[],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create content filter profile 'ignore_cf_rule_category_libinjection'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/ignore_cf_rule_category_libinjection"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"ignore_cf_rule_category_libinjection\""
              },
              {
                "Key": "name",
                "Value": "\"ignore_cf_rule_category_libinjection\""
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              },
              {
                "Key": "allsections",
                "Value": "{\"names\":[{\"type\":\"names\",\"key\":\"test\",\"reg\":\"<.*>\",\"restrict\":false,\"mask\":false,\"exclusions\":[\"cf-rule-category:libinjection\"],\"id\":\"ignore_cf_rule_category_libinjection\"}],\"regex\":[],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create content filter profile 'ignore_cf_rule_name_200039_cf_rule_category_libinjection'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/ignore_cf_rule_name_200039_cf_rule_category_libinjection"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"ignore_cf_rule_name_200039_cf_rule_category_libinjection\""
              },
              {
                "Key": "name",
                "Value": "\"ignore_cf_rule_name_200039_cf_rule_category_libinjection\""
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              },
              {
                "Key": "allsections",
                "Value": "{\"names\":[{\"type\":\"names\",\"key\":\"test\",\"reg\":\"<.*>\",\"restrict\":false,\"mask\":false,\"exclusions\":[\"cf-rule-name:200039\",\"cf-rule-category:libinjection\"],\"id\":\"ignore_cf_rule_name_200039_cf_rule_category_libinjection\"}],\"regex\":[],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create content filter profile 'key_regex_with_ignore'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/key_regex_with_ignore"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"key_regex_with_ignore\""
              },
              {
                "Key": "name",
                "Value": "\"key_regex_with_ignore\""
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              },
              {
                "Key": "allsections",
                "Value": "{\"regex\":[{\"type\":\"regex\",\"key\":\"^t.*\",\"reg\":\"<.*>\",\"restrict\":false,\"mask\":false,\"exclusions\":[\"cf-all\"],\"id\":\"key_regex_with_ignore\"}],\"names\":[],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create content filter profile 'key_regex_with_restrict'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/key_regex_with_restrict"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"key_regex_with_restrict\""
              },
              {
                "Key": "name",
                "Value": "\"key_regex_with_restrict\""
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              },
              {
                "Key": "allsections",
                "Value": "{\"regex\":[{\"type\":\"regex\",\"key\":\"^t.*\",\"reg\":\"<.*>\",\"restrict\":true,\"mask\":false,\"exclusions\":[],\"id\":\"key_regex_with_restrict\"}],\"names\":[],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create security policy with attached content filter profiles",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-security-policies",
            "Path": "/test-sp"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"test-sp\""
              },
              {
                "Key": "name",
                "Value": "\"test-sp\""
              },
              {
                "Key": "map",
                "Value": "[{\"id\":\"__root_entry__\",\"name\":\"__root__\",\"match\":\"^/(\\\\\\\\W.*)?$\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"__default_entry__\",\"name\":\"__default__\",\"match\":\"/\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"everything_unchecked\",\"name\":\"everything_unchecked\",\"match\":\"/everything_unchecked\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"everything_unchecked\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"restricted_checked\",\"name\":\"restricted_checked\",\"match\":\"/restricted_checked\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"restricted_checked\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"restricted_masked_checked\",\"name\":\"restricted_masked_checked\",\"match\":\"/restricted_masked_checked\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"restricted_masked_checked\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"restricted_unchecked_masked_checked\",\"name\":\"restricted_unchecked_masked_checked\",\"match\":\"/restricted_unchecked_masked_checked\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"restricted_unchecked_masked_checked\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"ignore_cf_rule_name_200039\",\"name\":\"ignore_cf_rule_name_200039\",\"match\":\"/ignore_cf_rule_name_200039\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"ignore_cf_rule_name_200039\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"ignore_cf_rule_risk_5\",\"name\":\"ignore_cf_rule_risk_5\",\"match\":\"/ignore_cf_rule_risk_5\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"ignore_cf_rule_risk_5\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"ignore_cf_rule_category_xss\",\"name\":\"ignore_cf_rule_category_xss\",\"match\":\"/ignore_cf_rule_category_xss\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"ignore_cf_rule_category_xss\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"ignore_cf_rule_subcategory_tag_insertion\",\"name\":\"ignore_cf_rule_subcategory_tag_insertion\",\"match\":\"/ignore_cf_rule_subcategory_tag_insertion\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"ignore_cf_rule_subcategory_tag_insertion\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"ignore_cf_all\",\"name\":\"ignore_cf_all\",\"match\":\"/ignore_cf_all\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"ignore_cf_all\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"ignore_cf_rule_category_libinjection\",\"name\":\"ignore_cf_rule_category_libinjection\",\"match\":\"/ignore_cf_rule_category_libinjection\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"ignore_cf_rule_category_libinjection\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"ignore_cf_rule_name_200039_cf_rule_category_libinjection\",\"name\":\"ignore_cf_rule_name_200039_cf_rule_category_libinjection\",\"match\":\"/ignore_cf_rule_name_200039_cf_rule_category_libinjection\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"ignore_cf_rule_name_200039_cf_rule_category_libinjection\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"key_regex_with_ignore\",\"name\":\"key_regex_with_ignore\",\"match\":\"/key_regex_with_ignore\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"key_regex_with_ignore\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"key_regex_with_restrict\",\"name\":\"key_regex_with_restrict\",\"match\":\"/key_regex_with_restrict\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"key_regex_with_restrict\",\"content_filter_active\":true,\"limit_ids\":[]}]"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create server group 'test.site' ",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-server-groups",
            "Path": "/test-site"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"test-site\""
              },
              {
                "Key": "name",
                "Value": "\"test-site\""
              },
              {
                "Key": "server_names",
                "Value": "[\"test.site\"]"
              },
              {
                "Key": "security_policy",
                "Value": "\"test-sp\""
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "ID": "publish-changes",
          "Skip": false
        },
        {
          "ID": "wait-for-publish",
          "Skip": false
        }
      ]
    },
    {
      "Name": "Test: Send traffic 'everything_unchecked",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 'everything_unchecked' 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/everything_unchecked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "<abc>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'everything_unchecked' 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/everything_unchecked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "abc"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'everything_unchecked' 3",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/everything_unchecked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "<select>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'everything_unchecked' 4",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/everything_unchecked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "<script>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'everything_unchecked' 5",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/everything_unchecked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "t",
              "Value": "abc"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        }
      ]
    },
    {
      "Name": "Test: Send traffic 'restricted_checked",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 'restricted_checked' 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "<abc>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'restricted_checked' 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "abc"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'restricted_checked' 3",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "<select>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'restricted_checked' 4",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "<script>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'restricted_checked' 5",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "t",
              "Value": "abc"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        }
      ]
    },
    {
      "Name": "Test: Send traffic 'restricted_masked_checked",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 'restricted_masked_checked' 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_masked_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "<abc>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'restricted_masked_checked' 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_masked_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "abc"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'restricted_masked_checked' 3",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_masked_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "<select>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'restricted_masked_checked' 4",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_masked_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "<script>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'restricted_masked_checked' 5",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_masked_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "t",
              "Value": "abc"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        }
      ]
    },
    {
      "Name": "Test: Send traffic 'restricted_unchecked_masked_checked",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 'restricted_unchecked_masked_checked' 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_unchecked_masked_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "<abc>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'restricted_unchecked_masked_checked' 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_unchecked_masked_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "abc"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'restricted_unchecked_masked_checked' 3",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_unchecked_masked_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "<select>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'restricted_unchecked_masked_checked' 4",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_unchecked_masked_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "<script>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'restricted_unchecked_masked_checked' 5",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/restricted_unchecked_masked_checked"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Arguments": [
            {
              "Key": "t",
              "Value": "abc"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        }
      ]
    },
    {
      "Name": "Test: Send traffic 'ignore_cf_rule_name_200039",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_name_200039' 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_name_200039"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<abc>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_name_200039' 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_name_200039"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=abc"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_name_200039' 3",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_name_200039"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<select>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_name_200039' 4",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_name_200039"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<script>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_name_200039' 5",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_name_200039"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "t=<select>>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        }
      ]
    },
    {
      "Name": "Test: Send traffic 'ignore_cf_rule_risk_5",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_risk_5' 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_risk_5"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<abc>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_risk_5' 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_risk_5"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=abc"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_risk_5' 3",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_risk_5"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<select>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_risk_5' 4",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_risk_5"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<script>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_risk_5' 5",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_risk_5"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "t=<select>>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        }
      ]
    },
    {
      "Name": "Test: Send traffic 'ignore_cf_rule_category_xss",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_category_xss' 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_category_xss"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<abc>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_category_xss' 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_category_xss"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=abc"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_category_xss' 3",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_category_xss"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<select>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_category_xss' 4",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_category_xss"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<script>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_category_xss' 5",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_category_xss"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "t=<select>>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        }
      ]
    },
    {
      "Name": "Test: Send traffic 'ignore_cf_rule_subcategory_tag_insertion",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_subcategory_tag_insertion' 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_subcategory_tag_insertion"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<abc>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_subcategory_tag_insertion' 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_subcategory_tag_insertion"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=abc"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_subcategory_tag_insertion' 3",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_subcategory_tag_insertion"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<select>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_subcategory_tag_insertion' 4",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_subcategory_tag_insertion"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<script>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_subcategory_tag_insertion' 5",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_subcategory_tag_insertion"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "t=<select>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        }
      ]
    },
    {
      "Name": "Test: Send traffic 'ignore_cf_all",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 'ignore_cf_all' 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_all"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<abc>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_all' 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_all"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=abc"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_all' 3",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_all"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<select>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_all' 4",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_all"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<script>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_all' 5",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_all"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "t=<select>>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        }
      ]
    },
    {
      "Name": "Test: Send traffic 'ignore_cf_rule_category_libinjection",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_category_libinjection' 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_category_libinjection"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<abc>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_category_libinjection' 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_category_libinjection"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=abc"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_category_libinjection' 3",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_category_libinjection"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<select>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_category_libinjection' 4",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_category_libinjection"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<script>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_category_libinjection' 5",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_category_libinjection"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "t=<select>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        }
      ]
    },
    {
      "Name": "Test: Send traffic 'ignore_cf_rule_name_200039_cf_rule_category_libinjection",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_name_200039_cf_rule_category_libinjection' 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_name_200039_cf_rule_category_libinjection"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<abc>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_name_200039_cf_rule_category_libinjection' 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_name_200039_cf_rule_category_libinjection"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=abc"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_name_200039_cf_rule_category_libinjection' 3",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_name_200039_cf_rule_category_libinjection"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<select>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_name_200039_cf_rule_category_libinjection' 4",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_name_200039_cf_rule_category_libinjection"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=<script>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'ignore_cf_rule_name_200039_cf_rule_category_libinjection' 5",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/ignore_cf_rule_name_200039_cf_rule_category_libinjection"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "t=<select>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        }
      ]
    },
    {
      "Name": "Test: Send traffic 'key_regex_with_ignore",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 'key_regex_with_ignore' 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/key_regex_with_ignore"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "test",
              "Value": "<select>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'key_regex_with_ignore' 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/key_regex_with_ignore"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "est",
              "Value": "<select>"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        }
      ]
    },
    {
      "Name": "Test: Send traffic 'key_regex_with_restrict",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 'key_regex_with_restrict' 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/key_regex_with_restrict"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "test",
              "Value": "abc"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'key_regex_with_restrict' 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/key_regex_with_restrict"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "test",
              "Value": "<abc>"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Step: Send Traffic 'key_regex_with_restrict' 3",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/key_regex_with_restrict"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "est",
              "Value": "abc"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        }
      ]
    },
    {
      "Name": "Test: wait for logs",
      "Skip": false,
      "Steps": [
        {
          "ID": "wait-for-logs",
          "Skip": false
        }
      ]
    },
    {
      "Name": "Test: logs for 'everything_unchecked",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs for everything_unchecked",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "status != 403, path = \"/everything_unchecked\", timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:everything-unchecked"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "contentfiltername:everything-unchecked"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "cf-rule-category:libinjection"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "contentfiltername:everything-unchecked"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "cf-rule-name:200039"
              },
              {
                "Key": "data/results/3/tags/*",
                "Value": "contentfiltername:everything-unchecked"
              },
              {
                "Key": "data/results/4/tags/*",
                "Value": "contentfiltername:everything-unchecked"
              }
            ]
          }
        }
      ]
    },
    {
      "Name": "Test: logs for 'restricted_checked",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs for restricted_checked",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "status != 403, path = \"/restricted_checked\", timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:restricted-checked"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "contentfiltername:restricted-checked"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "cf-rule-category:libinjection"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "contentfiltername:restricted-checked"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "cf-rule-name:200039"
              },
              {
                "Key": "data/results/3/tags/*",
                "Value": "contentfiltername:restricted-checked"
              },
              {
                "Key": "data/results/3/reason",
                "Value": "Block - restricted restricted[abc/<.*>] - restricted_checked - [URI argument test=abc]"
              },
              {
                "Key": "data/results/4/tags/*",
                "Value": "contentfiltername:restricted-checked"
              }
            ]
          }
        }
      ]
    },
    {
      "Name": "Test: logs for 'restricted_masked_checked",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs for restricted_masked_checked",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "status != 403, path = \"/restricted_masked_checked\",  timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:restricted-masked-checked"
              },
              {
                "Key": "data/results/0/arguments/t",
                "Value": "abc"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "contentfiltername:restricted-masked-checked"
              },
              {
                "Key": "data/results/1/arguments/test",
                "Value": "MASKED{b20c3957}"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "cf-rule-category:libinjection"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "contentfiltername:restricted-masked-checked"
              },
              {
                "Key": "data/results/2/arguments/test",
                "Value": "MASKED{c4e40d1c}"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "cf-rule-name:200039"
              },
              {
                "Key": "data/results/3/tags/*",
                "Value": "contentfiltername:restricted-masked-checked"
              },
              {
                "Key": "data/results/3/arguments/test",
                "Value": "MASKED{fe1bec0d}"
              },
              {
                "Key": "data/results/4/tags/*",
                "Value": "contentfiltername:restricted-masked-checked"
              },
              {
                "Key": "data/results/4/arguments/test",
                "Value": "MASKED{6382a5f2}"
              }
            ]
          }
        }
      ]
    },
    {
      "Name": "Test: logs for 'restricted_unchecked_masked_checked",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs for restricted_unchecked_masked_checked",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "status != 403, path = \"/restricted_unchecked_masked_checked\",  timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:restricted-unchecked-masked-checked"
              },
              {
                "Key": "data/results/0/arguments/t",
                "Value": "abc"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "contentfiltername:restricted-unchecked-masked-checked"
              },
              {
                "Key": "data/results/1/arguments/test",
                "Value": "MASKED{b20c3957}"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "cf-rule-category:libinjection"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "contentfiltername:restricted-unchecked-masked-checked"
              },
              {
                "Key": "data/results/2/arguments/test",
                "Value": "MASKED{c4e40d1c}"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "cf-rule-name:200039"
              },
              {
                "Key": "data/results/3/tags/*",
                "Value": "contentfiltername:restricted-unchecked-masked-checked"
              },
              {
                "Key": "data/results/3/arguments/test",
                "Value": "MASKED{fe1bec0d}"
              },
              {
                "Key": "data/results/4/tags/*",
                "Value": "contentfiltername:restricted-unchecked-masked-checked"
              },
              {
                "Key": "data/results/4/arguments/test",
                "Value": "MASKED{6382a5f2}"
              }
            ]
          }
        }
      ]
    },
    {
      "Name": "Test: logs for 'ignore_cf_rule_name_200039",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs for ignore_cf_rule_name_200039",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "status != 403, path = \"/ignore_cf_rule_name_200039\",  timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-name-200039"
              },
              {
                "Key": "data/results/0/tags/*",
                "Value": "cf-rule-name:200039"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-name-200039"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "cf-rule-category:libinjection"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-name-200039"
              },
              {
                "Key": "data/results/3/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-name-200039"
              },
              {
                "Key": "data/results/4/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-name-200039"
              }
            ]
          }
        }
      ]
    },
    {
      "Name": "Test: logs for 'ignore_cf_rule_risk_5",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs for ignore_cf_rule_risk_5",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "status != 403, path = \"/ignore_cf_rule_risk_5\",  timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-risk-5"
              },
              {
                "Key": "data/results/0/tags/*",
                "Value": "cf-rule-name:200039"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-risk-5"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "cf-rule-category:libinjection"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-risk-5"
              },
              {
                "Key": "data/results/3/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-risk-5"
              },
              {
                "Key": "data/results/4/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-risk-5"
              }
            ]
          }
        }
      ]
    },
    {
      "Name": "Test: logs for 'ignore_cf_rule_category_xss",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs for ignore_cf_rule_category_xss",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "status != 403, path = \"/ignore_cf_rule_category_xss\",  timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-category-xss"
              },
              {
                "Key": "data/results/0/tags/*",
                "Value": "cf-rule-name:200039"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-category-xss"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "cf-rule-category:libinjection"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-category-xss"
              },
              {
                "Key": "data/results/3/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-category-xss"
              },
              {
                "Key": "data/results/4/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-category-xss"
              }
            ]
          }
        }
      ]
    },
    {
      "Name": "Test: logs for 'ignore_cf_rule_subcategory_tag_insertion",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs for ignore_cf_rule_subcategory_tag_insertion",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "status != 403, path = \"/ignore_cf_rule_subcategory_tag_insertion\",  timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-subcategory-tag-insertion"
              },
              {
                "Key": "data/results/0/tags/*",
                "Value": "cf-rule-name:200039"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-subcategory-tag-insertion"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "cf-rule-category:libinjection"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-subcategory-tag-insertion"
              },
              {
                "Key": "data/results/3/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-subcategory-tag-insertion"
              },
              {
                "Key": "data/results/4/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-subcategory-tag-insertion"
              }
            ]
          }
        }
      ]
    },
    {
      "Name": "Test: logs for 'ignore_cf_all",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs for ignore_cf_all",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "status != 403, path = \"/ignore_cf_all\",  timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:ignore-cf-all"
              },
              {
                "Key": "data/results/0/tags/*",
                "Value": "cf-rule-name:200039"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "contentfiltername:ignore-cf-all"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "contentfiltername:ignore-cf-all"
              },
              {
                "Key": "data/results/3/tags/*",
                "Value": "contentfiltername:ignore-cf-all"
              },
              {
                "Key": "data/results/4/tags/*",
                "Value": "contentfiltername:ignore-cf-all"
              }
            ]
          }
        }
      ]
    },
    {
      "Name": "Test: logs for 'ignore_cf_rule_category_libinjection",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs for ignore_cf_rule_category_libinjection",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "status != 403, path = \"/ignore_cf_rule_category_libinjection\",  timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-category-libinjection"
              },
              {
                "Key": "data/results/0/tags/*",
                "Value": "cf-rule-name:200039"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-category-libinjection"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-category-libinjection"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "cf-rule-name:200039"
              },
              {
                "Key": "data/results/3/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-category-libinjection"
              },
              {
                "Key": "data/results/4/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-category-libinjection"
              }
            ]
          }
        }
      ]
    },
    {
      "Name": "Test: logs for 'ignore_cf_rule_name_200039_cf_rule_category_libinjection",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs for ignore_cf_rule_name_200039_cf_rule_category_libinjection",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "status != 403, path = \"/ignore_cf_rule_name_200039_cf_rule_category_libinjection\",  timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-name-200039-cf-rule-category-libinjection"
              },
              {
                "Key": "data/results/0/tags/*",
                "Value": "cf-rule-name:200039"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-name-200039-cf-rule-category-libinjection"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-name-200039-cf-rule-category-libinjection"
              },
              {
                "Key": "data/results/3/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-name-200039-cf-rule-category-libinjection"
              },
              {
                "Key": "data/results/4/tags/*",
                "Value": "contentfiltername:ignore-cf-rule-name-200039-cf-rule-category-libinjection"
              }
            ]
          }
        }
      ]
    },
    {
      "Name": "Test: logs for 'key_regex_with_ignore",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs for key_regex_with_ignore",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "status != 403, path = \"/key_regex_with_ignore\",  timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:key-regex-with-ignore"
              },
              {
                "Key": "data/results/0/tags/*",
                "Value": "cf-rule-name:200039"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "contentfiltername:key-regex-with-ignore"
              }
            ]
          }
        }
      ]
    },
    {
      "Name": "Test: logs for 'key_regex_with_restrict",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs for key_regex_with_restrict",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "status != 403, path = \"/key_regex_with_restrict\",  timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:key-regex-with-restrict"
              },
              {
                "Key": "data/results/1/tags/*",
                "Value": "contentfiltername:key-regex-with-restrict"
              },
              {
                "Key": "data/results/2/tags/*",
                "Value": "contentfiltername:key-regex-with-restrict"
              },
              {
                "Key": "data/results/2/reason",
                "Value": "Block - restricted restricted[abc/<.*>] - key_regex_with_restrict - [header test=abc]"
              }
            ]
          }
        }
      ]
    }
  ]
}
