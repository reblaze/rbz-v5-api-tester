{
    "Name": "TA 1325 Flow control test active check box",
    "Skip": false,
    "Tests": [
        {
            "Name": "Test 1: Create flow controls",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Create a flow control 'gf-active'",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "flow-control",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"gf-active\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"gf-active\""
                            },
                            {
                                "Key": "active",
                                "Value": "true"
                            },

                            {
                                "Key": "tags",
                                "Value": "[\"my-test-1325\"]"
                            },
                            {
                                "Key": "sequence",
                                "Value": "[{\"method\": \"GET\",\"uri\": \"/flowa\",\"cookies\": {},\"headers\": {\"host\": \"test.site\"},\"args\": {}},{\"method\": \"GET\",\"uri\": \"/flowb\",\"cookies\": {},\"headers\": {\"host\": \"test.site\"},\"args\": {}}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create a flow control 'gf-no-active'",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "flow-control",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"gf-no-active\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"gf-no-active\""
                            },
                            {
                                "Key": "active",
                                "Value": "false"
                            },

                            {
                                "Key": "tags",
                                "Value": "[\"my-test-1325\"]"
                            },
                            {
                                "Key": "sequence",
                                "Value": "[{\"method\": \"GET\",\"uri\": \"/flowc\",\"cookies\": {},\"headers\": {\"host\": \"test.site\"},\"args\": {}},{\"method\": \"GET\",\"uri\": \"/flowd\",\"cookies\": {},\"headers\": {\"host\": \"test.site\"},\"args\": {}}]"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 2: Create server group and security policy",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: User can create security policy with attached content filter profiles",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"security-policy",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"map",
                                "Value":"[{\"id\":\"__root_entry__\",\"name\":\"__root__\",\"match\":\"^/(\\\\W.*)?$\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"__default_entry__\",\"name\":\"__default__\",\"match\":\"/\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]}]"

                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: Create new server group 'test.site' ",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"server-group",
                        "Path":"test-site/"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"server_names",
                                "Value":"[\"test.site\"]"
                            },
                            {
                                "Key":"security_policy",
                                "Value":"\"test-sp\""
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"id",
                                "Value":"test-site"
                            }
                        ]
                    }
                },
                {
                    "ID":"publish-changes",
                    "Skip":false
                },
                {
                    "ID":"wait-for-publish",
                    "Skip":false
                }
            ]
        },
        {
            "Name": "Test 3: Send traffics",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Send Traffic 1 to /flowa -H 'host:test.site",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/flowa"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 2 to flowb -H 'host:test.site'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/flowb"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "test",
                            "Value": "tag"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Skip": false,
                    "Type": "python",
                    "Code": [
                        "import time",
                        "time.sleep(10)"
                    ]
                },
                {
                    "Name": "Step: Send Traffic 3 to flowc -H 'host:test.site",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/flowc"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 4 to flowd -H 'host:test.site",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/flowd"
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                }
            ]
        },
        {
            "Name": "Test 3: Wait for logs",
            "Skip": false,
            "Steps": [
                {
                    "ID": "wait-for-logs",
                    "Skip": false
                }
            ]
        },
        {
            "Name": "Test 4: Check logs ",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs from tags = 'my-test-1325'",
                    "Skip": false,
                    "API": {
                        "Base": "logs",
                        "Path": ""
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "tags = my-test-1325, status = 200, timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/path",
                                "Value": "/flowb"
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Get Logs from tags != my-test-1325",
                    "Skip": false,
                    "API": {
                        "Base": "logs",
                        "Path": ""
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "tags != my-test-1325, status = 200, timestamp between @@NOW(-3minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "data/results/0/path",
                                "Value": "/flowd"
                            },
                            {
                                "Key": "data/results/1/path",
                                "Value": "/flowc"
                            },
                            {
                                "Key": "data/results/2/path",
                                "Value": "/flowa"
                            }
                        ]
                    }
                }
            ]
        }
    ]
}
