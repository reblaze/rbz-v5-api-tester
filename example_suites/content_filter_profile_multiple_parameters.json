{
  "Name": "TA 1290 Content filter profile multiple parameters",
  "Skip": false,
  "Tests": [
    {
      "Name": "Test: Create content filter profiles, security policy and server group",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Create new content filter profile with name `same_section`",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/same_section"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"same_section\""
              },
              {
                "Key": "name",
                "Value": "\"same_section\""
              },
              {
                "Key": "action",
                "Value": "\"action-contentfilter-block\""
              },
              {
                "Key": "headers",
                "Value": "{\"max_count\": 42,\"max_length\": 1024,\"enable_max_length\": false,\"enable_max_count\": false,\"names\": [{\"type\": \"names\",\"key\": \"test2\",\"reg\": \"test2\",\"restrict\": true,\"mask\": false,\"exclusions\": [],\"id\": \"96733c07cc55\"},{\"type\": \"names\",\"key\": \"test1\",\"reg\": \"test1\",\"restrict\": true,\"mask\": false,\"exclusions\": [],\"id\": \"9c321686885c\"}],\"regex\": []}"
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create new content filter profile with name `different_sections`",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/different_sections"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"different_sections\""
              },
              {
                "Key": "name",
                "Value": "\"different_sections\""
              },
              {
                "Key": "action",
                "Value": "\"action-contentfilter-block\""
              },
              {
                "Key": "headers",
                "Value": "{\"max_count\": 42,\"max_length\": 1024,\"enable_max_length\": false,\"enable_max_count\": false,\"names\": [{\"type\": \"names\",\"key\": \"test2\",\"reg\": \"test2\",\"restrict\": true,\"mask\": false,\"exclusions\": [],\"id\": \"96733c07cc55\"}],\"regex\": []}"
              },
              {
                "Key": "cookies",
                "Value": "{\"max_count\": 42,\"max_length\": 1024,\"enable_max_length\": false,\"enable_max_count\": false,\"names\": [{\"type\": \"names\",\"key\": \"test\",\"reg\": \"cookie\",\"restrict\": true,\"mask\": false,\"exclusions\": [],\"id\": \"7b733d448cba\"}],\"regex\": []}"
              },
              {
                "Key": "args",
                "Value": "{\"max_count\": 512,\"max_length\": 1024,\"enable_max_length\": false,\"enable_max_count\": false,\"names\": [{\"type\": \"names\",\"key\": \"test\",\"reg\": \"arg\",\"restrict\": true,\"mask\": false,\"exclusions\": [],\"id\": \"f8e4d9207521\"}],\"regex\": []}"
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              },
              {
                "Key": "ignore_alphanum",
                "Value": "false"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create security policy with attached content filter profiles",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-security-policies",
            "Path": "/test-sp"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"test-sp\""
              },
              {
                "Key": "name",
                "Value": "\"test-sp\""
              },
              {
                "Key": "map",
                "Value": "[{\"id\":\"__root_entry__\",\"name\":\"__root__\",\"match\":\"^/(\\\\W.*)?$\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"__default_entry__\",\"name\":\"__default__\",\"match\":\"/\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]}, {\"id\": \"different_sections\", \"name\": \"different_section\", \"match\": \"/different_sections\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"different_sections\", \"content_filter_active\": true, \"limit_ids\": []}, {\"id\": \"same_section\", \"name\": \"same_section\", \"match\": \"/same_section\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"same_section\", \"content_filter_active\": true, \"limit_ids\": []}]"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create new server group 'test.site' ",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-server-groups",
            "Path": "/test-site"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"test-site\""
              },
              {
                "Key": "name",
                "Value": "\"test-site\""
              },
              {
                "Key": "server_names",
                "Value": "[\"test.site\"]"
              },
              {
                "Key": "security_policy",
                "Value": "\"test-sp\""
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "ID": "publish-changes",
          "Skip": false
        },
        {
          "ID": "wait-for-publish",
          "Skip": false
        }
      ]
    },
    {
      "Name": "Test: Send traffic",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/same_section"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "test1",
              "Value": "abc"
            },
            {
              "Key": "test2",
              "Value": "test2"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b'access denied'"
          }
        },
        {
          "Name": "Step: Send Traffic 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/different_sections"
          },
          "Method": "POST",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "cookie",
              "Value": "test=cookie"
            }
          ],
          "Arguments": [
            {
              "Key": "test",
              "Value": "abc"
            }
          ],
          "Expected": {
            "Code": "473",
            "Type": "content",
            "Single": true,
            "Text": "b'access denied'"
          }
        }
      ]
    },
    {
      "Name": "Test: Check logs",
      "Skip": false,
      "Steps": [
        {
          "ID": "wait-for-logs",
          "Skip": false
        },
        {
          "Name": "Step: Get Logs from path /different_sections",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "path = /different_sections, status = 473, timestamp between @@NOW(-5minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/reason",
                "Value": "Block - restricted restricted[abc/arg] - different_sections - [URI argument test=abc]"
              },
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:different-sections"
              }
            ]
          }
        },
        {
          "Name": "Step: Get Logs from path /same_section",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "path = /same_section, status = 473, timestamp between @@NOW(-5minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/reason",
                "Value": "Block - restricted restricted[abc/test1] - same_section - [header test1=abc]"
              },
              {
                "Key": "data/results/0/tags/*",
                "Value": "contentfiltername:same-section"
              }
            ]
          }
        }
      ]
    }
  ]
}