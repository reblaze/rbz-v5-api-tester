{
  "Name": "Rate limit - with Global filter- with ACL- with Flow control TA-1313",
  "Skip": false,
  "Tests": [
    {
      "Name": "Rate limit - with Global filter- with ACL- with Flow control",
      "Skip": false,
      "Steps": [
        {
          "Name": "Create Rate limit 'rl1'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "rate-limit",
            "Path": ""
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "name",
                "Value": "\"rl1\""
              },
              {
                "Key": "id",
                "Value": "\"rl1\""
              },
              {
                "Key": "active",
                "Value": "true"
              },
              {
                "Key": "global",
                "Value": "false"
              },
              {
                "Key": "timeframe",
                "Value": "20"
              },
              {
                "Key": "threshold",
                "Value": "2"
              },
              {
                "Key": "key",
                "Value": "[\n{\n\"attrs\": \"ip\"\n}\n]"
              },
              {
                "Key": "action",
                "Value": "\"action-rate-limit-block\""
              }
            ]
          },
          "Expected": {
            "Code": "200",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "ok",
                "Value": true
              }
            ]
          }
        },{
          "Name": "Create Rate limit 'rl2'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "rate-limit",
            "Path": ""
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "name",
                "Value": "\"rl2\""
              },
              {
                "Key": "id",
                "Value": "\"rl2\""
              },
              {
                "Key": "active",
                "Value": "true"
              },
              {
                "Key": "global",
                "Value": "false"
              },
              {
                "Key": "timeframe",
                "Value": "20"
              },
              {
                "Key": "threshold",
                "Value": "2"
              },
              {
                "Key": "key",
                "Value": "[\n{\n\"attrs\": \"ip\"\n}\n]"
              },
              {
                "Key": "action",
                "Value": "\"action-rate-limit-block\""
              }
            ]
          },
          "Expected": {
            "Code": "200",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "ok",
                "Value": true
              }
            ]
          }
        },
        {
          "Name": "Edit Rate limit 'rl3'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "rate-limit",
            "Path": ""
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "name",
                "Value": "\"rl3\""
              },
              {
                "Key": "id",
                "Value": "\"rl3\""
              },
              {
                "Key": "active",
                "Value": "true"
              },
              {
                "Key": "global",
                "Value": "true"
              },
              {
                "Key": "timeframe",
                "Value": "20"
              },
              {
                "Key": "threshold",
                "Value": "0"
              },
              {
                "Key": "key",
                "Value": "[\n{\n\"attrs\": \"ip\"\n}\n]"
              },
              {
                "Key": "action",
                "Value": "\"action-rate-limit-block\""
              },
              {
                "Key": "include",
                "Value": "[\"my-test\"]"
              }
            ]
          },
          "Expected": {
            "Code": "200",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "ok",
                "Value": true
              }
            ]
          }
        },
        {
          "Name": "Create Global Filter with Name: 'gl1'",
          "Skip": false,
          "API": {
            "Base": "global-filter",
            "Path": ""
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "name",
                "Value": "\"gl1\""
              },
              {
                "Key": "id",
                "Value": "\"gl1\""
              },
              {
                "Key": "active",
                "Value": "true"
              },
              {
                "Key": "action",
                "Value": "\"global-filter block\""
              },
              {
                "Key": "rule",
                "Value": "{\n\"entries\":[\n[\n\"path\",\n\"/test-gf\",\n\"y\"\n]\n],\n\"relation\":\"OR\"\n}"
              }
            ]
          },
          "Expected": {
            "Code": "200",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "ok",
                "Value": true
              }
            ]
          }
        },
        {
          "Name": "Create security policy ",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "security-policy",
            "Path": ""
          },
          "Method": "POST",
          "Payload": {
            "Template": "securitypolicy.template",
            "Defaults": "securitypolicy.defaults",
            "Params": [
              {
                "Key": "id",
                "Value": "\"test-sp\""
              },
              {
                "Key": "name",
                "Value": "\"test-sp\""
              },
              {
                "Key": "map",
                "Value": "[\n{\n\"id\":\"__default_entry__\",\n\"match\":\"/\",\n\"name\":\"default\",\n\"acl_profile\":\"__acldefault__\",\n\"content_filter_profile\":\"__defaultcontentfilter__\",\n\"backend_id\":\"__default__\",\n\"acl_active\":false,\n\"content_filter_active\":false,\n\"limit_ids\":[],\n\"cloud_functions\":[]\n},\n{\n\"id\":\"bbed6cf8165f\",\n\"match\":\"/test-gf\",\n\"name\":\"r1Path\",\n\"acl_profile\":\"__acldefault__\",\n\"content_filter_profile\":\"__defaultcontentfilter__\",\n\"backend_id\":\"__default__\",\n\"acl_active\":false,\n\"content_filter_active\":false,\n\"limit_ids\":[\n\"rl1\"\n],\n\"cloud_functions\":[]\n},\n{\n\"id\":\"2bc56a35a473\",\n\"match\":\"/test-acl\",\n\"name\":\"rl2Path\",\n\"acl_profile\":\"__acldenyall__\",\n\"content_filter_profile\":\"__defaultcontentfilter__\",\n\"backend_id\":\"__default__\",\n\"acl_active\":true,\n\"content_filter_active\":false,\n\"limit_ids\":[\n\"rl2\"\n],\n\"cloud_functions\":[]\n}\n]"
              }
            ]
          },
          "Expected": {
            "Code": "200",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "ok",
                "Value": true
              }
            ]
          }
        },
        {
          "Name": "Create server group 'test.site' ",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "server-group",
            "Path": "test-site/"
          },
          "Method": "POST",
          "Payload": {
            "Template": "servergroup.template",
            "Defaults": "servergroup.defaults",
            "Params": [
              {
                "Key": "id",
                "Value": "\"test-site\""
              },
              {
                "Key": "name",
                "Value": "\"test-site\""
              },
              {
                "Key": "security_policy",
                "Value": "\"test-sp\""
              },
              {
                "Key": "server_names",
                "Value": "[\"test.site\"]"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "id",
                "Value": "test-site"
              }
            ]
          }
        },
        {
          "Name": "Create Flow Control with Name:'test'",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "flow-control",
            "Path": ""
          },
          "Method": "POST",
          "Payload": {
            "Template": "flowcontrol.template",
            "Defaults": "flowcontrol.defaults",
            "Params": [
              {
                "Key": "name",
                "Value": "\"test\""
              },
              {
                "Key": "id",
                "Value": "\"flow_test\""
              },
              {
                "Key": "key",
                "Value": "[\n{\n\"attrs\": \"ip\"\n}\n]"
              },
              {
                "Key": "tags",
                "Value": " [\n\"my-test\"\n]"
              },
              {
                "Key": "sequence",
                "Value": "[\n{\n\"method\":\"GET\",\n\"uri\":\"/flowa\",\n\"cookies\":{},\n\"headers\":{\n\"host\":\"test.site\"\n},\n\"args\":{}\n},\n{\n\"method\":\"GET\",\n\"uri\":\"/flowb\",\n\"cookies\":{},\n\"headers\":{\n\"host\":\"test.site\"\n},\n\"args\":{}\n}\n]"
              },
              {
                "Key": "active",
                "Value": "true"
              }
            ]
          },
          "Expected": {
            "Code": "200",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "ok",
                "Value": true
              }
            ]
          }
        },
        {
          "ID": "publish-changes",
          "Skip": false
        },
        {
          "ID": "wait-for-publish",
          "Skip": false
        },
        {
          "Name": "Send Traffic using GET method to path /test-gf 1",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/test-gf"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Send Traffic using GET method to path /test-gf 2",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/test-gf"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Send Traffic using GET method to path /test-gf 3",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/test-gf"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Expected": {
            "Code": "471",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Send Traffic using GET method to path /test-acl 4",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/test-acl"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Expected": {
            "Code": "472",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Send Traffic using GET method to path /test-acl 5",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/test-acl"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Expected": {
            "Code": "472",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Send Traffic using GET method to path /test-acl 6",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/test-acl"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Expected": {
            "Code": "471",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Send Traffic using GET method to path /flowa 7",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/flowa"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "Name": "Send Traffic using GET method to path /flowb 8",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/flowb"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            }
          ],
          "Expected": {
            "Code": "471",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        },
        {
          "ID": "wait-for-logs",
          "Skip": false
        },
        {
          "Name": "Assert logs for tag 'fc-name:test'",
          "Skip": false,
          "API": {
            "Base": "logs",
            "Path": ""
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "path = \"/flowb\", tags=\"status:471\", timestamp between @@NOW(-10minutes)@@ and @@NOW(+10minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "Headers": [
              {
                "Key": "Server",
                "Value": "rhino-core-shield"
              }
            ],
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "limit-name:rl3"
              },
              {
                "Key": "data/results/0/tags/*",
                "Value": "fc-name:test"
              }
            ]
          }
        },
        {
          "Name": "Assert logs for tag 'limit-name:rl1'",
          "Skip": false,
          "API": {
            "Base": "logs",
            "Path": ""
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "path = \"/test-gf\", tags=\"status:471\", timestamp between @@NOW(-10minutes)@@ and @@NOW(+10minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "Headers": [
              {
                "Key": "Server",
                "Value": "rhino-core-shield"
              }
            ],
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "limit-name:rl1"
              }
            ]
          }
        },
        {
          "Name": "Assert logs for tag 'aclname:acl-deny-all'",
          "Skip": false,
          "API": {
            "Base": "logs",
            "Path": ""
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "limit",
              "Value": "200"
            },
            {
              "Key": "filters",
              "Value": "path = \"/test-acl\", tags=\"status:472\", timestamp between @@NOW(-10minutes)@@ and @@NOW(+10minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "Headers": [
              {
                "Key": "Server",
                "Value": "rhino-core-shield"
              }
            ],
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "aclname:acl-deny-all"
              },
              {
                "Key": "data/results/0/tags/*",
                "Value": "aclname:acl-deny-all"
              }
            ]
          }
        }
      ]
    }
  ]
}