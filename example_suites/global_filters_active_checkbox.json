{
  "Name": "TA 1299 Global filters active checkbox",
  "Skip": false,
  "Tests": [
    {
      "Name": "Test 1: Create global filters",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: User can create global filter with name `gf1-active-on`",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-global-filters",
            "Path": "/gf1-active-on"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "name",
                "Value": "\"gf1-active-on\""
              },
              {
                "Key": "id",
                "Value": "\"gf1-active-on\""
              },
              {
                "Key": "active",
                "Value": "true"
              },
              {
                "Key": "action",
                "Value": "\"action-global-filter-block\""
              },
              {
                "Key": "tags",
                "Value": "[\"my-tag-active-on\"]"
              },
              {
                "Key": "rule",
                "Value": "{\"relation\": \"OR\", \"entries\": [{\"relation\": \"OR\", \"entries\": [[\"headers\", [\"test-on\", \"123\"], \"\"]]}, {\"relation\": \"OR\", \"entries\": [[\"args\", [\"test-on\", \"123\"], \"\"]]}]}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: User can create global filter with name `gf2-active-off`",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-global-filters",
            "Path": "/gf2-active-off"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "name",
                "Value": "\"gf2-active-off\""
              },
              {
                "Key": "id",
                "Value": "\"gf2-active-off\""
              },
              {
                "Key": "active",
                "Value": "false"
              },
              {
                "Key": "action",
                "Value": "\"action-global-filter-block\""
              },
              {
                "Key": "tags",
                "Value": "[\"my-tag-active-off\"]"
              },
              {
                "Key": "rule",
                "Value": "{\"relation\": \"OR\", \"entries\": [{\"relation\": \"OR\", \"entries\": [[\"headers\", [\"test-off\", \"123\"], \"\"]]}, {\"relation\": \"OR\", \"entries\": [[\"args\", [\"test-off\", \"123\"], \"\"]]}]}"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        }
      ]
    },
    {
      "Name": "Test 2: Create content filter profile, security policy, server group and publish changes",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Create new content filter profile with name `test-cfp`",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-content-filter-profiles",
            "Path": "/test-cfp"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"test-cfp\""
              },
              {
                "Key": "name",
                "Value": "\"test-cfp\""
              },
              {
                "Key": "ignore_body",
                "Value": "false"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create security policy `test-sp`",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-security-policies",
            "Path": "/test-sp"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"test-sp\""
              },
              {
                "Key": "name",
                "Value": "\"test-sp\""
              },
              {
                "Key": "map",
                "Value": "[{\"id\": \"__default_entry__\", \"match\": \"/\", \"name\": \"default\", \"acl_profile\": \"__acldefault__\", \"content_filter_profile\": \"test-cfp\", \"backend_id\": \"__default__\", \"acl_active\": false, \"content_filter_active\": false, \"limit_ids\": [], \"cloud_functions\": []}]"
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "Name": "Step: Create new server group 'test.site' ",
          "Skip": false,
          "GenerateID": false,
          "API": {
            "Base": "api-server-groups",
            "Path": "/test-site"
          },
          "Method": "POST",
          "Payload": {
            "Params": [
              {
                "Key": "id",
                "Value": "\"test-site\""
              },
              {
                "Key": "name",
                "Value": "\"test-site\""
              },
              {
                "Key": "server_names",
                "Value": "[\"test.site\"]"
              },
              {
                "Key": "security_policy",
                "Value": "\"test-sp\""
              }
            ]
          },
          "Expected": {
            "Code": "201",
            "Type": "json",
            "Single": true,
            "SingleResult": [
              {
                "Key": "message",
                "Value": "Successfully created entry"
              }
            ]
          }
        },
        {
          "ID": "publish-changes",
          "Skip": false
        },
        {
          "ID": "wait-for-publish",
          "Skip": false
        }
      ]
    },
    {
      "Name": "Test 3: Send traffics to global filter 'gf1-active-on'",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 1 to rate limit `gf1-active-on`",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/gf1-active-on"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "test-on",
              "Value": "123"
            }
          ],
          "Arguments": [
            {
              "Key": "test-on",
              "Value": "123"
            }
          ],
          "Expected": {
            "Code": "470",
            "Type": "content",
            "Single": true,
            "Text": "b'access denied'"
          }
        }
      ]
    },
    {
      "Name": "Test 4: Send traffics to rate limit 'gf2-active-off'",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Send Traffic 1 to rate limit `gf2-active-off`",
          "Skip": false,
          "API": {
            "Base": "send-traffic",
            "Path": "/gf2-active-off"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "Host",
              "Value": "test.site"
            },
            {
              "Key": "test-off",
              "Value": "123"
            }
          ],
          "Arguments": [
            {
              "Key": "test-off",
              "Value": "123"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "content",
            "Single": true,
            "Text": "b''"
          }
        }
      ]
    },
    {
      "Name": "Test 5: Wait for logs",
      "Skip": false,
      "Steps": [
        {
          "ID": "wait-for-logs",
          "Skip": false
        }
      ]
    },
    {
      "Name": "Test 6: Check logs from global filter `gf1-active-on`",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs from global filter 'gf1-active-on'",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "filters",
              "Value": "path = /gf1-active-on, status != 403, timestamp between @@NOW(-2minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "status:470"
              },
              {
                "Key": "data/results/0/tags/*",
                "Value": "my-tag-active-on"
              }
            ]
          }
        }
      ]
    },
    {
      "Name": "Test 7: Check logs from global filter `gf2-active-off`",
      "Skip": false,
      "Steps": [
        {
          "Name": "Step: Get Logs from global filter 'gf2-active-off'",
          "Skip": false,
          "API": {
            "Base": "api-data",
            "Path": "/logs"
          },
          "Method": "GET",
          "Headers": [
            {
              "Key": "syntax",
              "Value": "string_query"
            }
          ],
          "Arguments": [
            {
              "Key": "filters",
              "Value": "path = /gf2-active-off, status != 403, timestamp between @@NOW(-2minutes)@@ and @@NOW(+2minutes)@@, branch=@@branch@@"
            }
          ],
          "Expected": {
            "Code": "200",
            "Type": "jsonpath",
            "Single": true,
            "SingleResult": [
              {
                "Key": "data/results/0/tags/*",
                "Value": "status:200"
              }
            ]
          }
        }
      ]
    }
  ]
}