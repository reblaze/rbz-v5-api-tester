{
    "Name":"TA 1288 Content filter profile cookies parameters match functional tests",
    "Skip":false,
    "Tests":[
        {
            "Name":"Test 1: Create filter profiles",
            "Skip":false,
            "Steps":[
                {
                    "Name": "Step: Create new content filter profile with name `test-cfr-match`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-profile",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test_cfr_match\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test_cfr_match\""
                            },
                            {
                                "Key": "cookies",
                                "Value": "{\"names\":[{\"type\":\"names\",\"key\":\"test-match-key\",\"reg\":\"passthru(\\\\s+)?\\\\(\",\"restrict\":false,\"mask\":false,\"exclusions\":[],\"id\":\"cfr_match\"}],\"regex\":[],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new content filter profile with name `test_cfr_restrict`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-profile",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test_cfr_restrict\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test_cfr_restrict\""
                            },
                            {
                                "Key": "cookies",
                                "Value": "{\"names\": [{\"type\": \"names\", \"key\": \"test-restrict-key\", \"reg\": \"passthru(\\\\s+)?\\\\(\", \"restrict\": true, \"mask\": false,\"exclusions\": [],\"id\": \"cfr_restrict\"}], \"regex\": [], \"max_count\": 42, \"enable_max_count\": true, \"max_length\": 1024, \"enable_max_length\": true}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new content filter profile with name `test_cfr_restrict_mask`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-profile",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test_cfr_restrict_mask\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test_cfr_restrict_mask\""
                            },
                            {
                                "Key": "cookies",
                                "Value": "{\"names\": [{\"type\": \"names\", \"key\": \"test-restrict-mask-key\", \"reg\": \"passthru(\\\\s+)?\\\\(\", \"restrict\": true, \"mask\": true,\"exclusions\": [],\"id\": \"cfr_restrict_mask\"}], \"regex\": [], \"max_count\": 42, \"enable_max_count\": true, \"max_length\": 1024, \"enable_max_length\": true}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new content filter profile with name `test_cfr_ignore`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-profile",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test_cfr_ignore\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test_cfr_ignore\""
                            },
                            {
                                "Key": "cookies",
                                "Value": "{\"names\": [{\"type\": \"names\", \"key\": \"test-ignore-key\", \"reg\": \"pass(\\\\s+)?\\\\(\", \"restrict\": false, \"mask\": false,\"exclusions\": [], \"ignore\": [\"cf-rule-name:100024\"],\"id\": \"cfr_ignore\"}], \"regex\": [], \"max_count\": 42, \"enable_max_count\": true, \"max_length\": 1024, \"enable_max_length\": true}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new content filter profile with name `test_cfr_ignore_empty`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-profile",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test_cfr_ignore_empty\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test_cfr_ignore_empty\""
                            },
                            {
                                "Key": "cookies",
                                "Value": "{\"names\": [{\"type\": \"names\", \"key\": \"test-ignore-empty-key\", \"reg\": \"pass(\\\\s+)?\\\\(\", \"restrict\": false, \"mask\": false,\"exclusions\": [], \"ignore\": [], \"id\": \"cfr_ignore_empty\"}], \"regex\": [], \"max_count\": 42, \"enable_max_count\": true, \"max_length\": 1024, \"enable_max_length\": true}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                },
                {
                    "Name": "Step: Create new content filter profile with name `test_cfr_regex`",
                    "Skip": false,
                    "GenerateID": false,
                    "API": {
                        "Base": "content-filter-profile",
                        "Path": ""
                    },
                    "Method": "POST",
                    "Payload": {
                        "Params": [
                            {
                                "Key": "id",
                                "Value": "\"test_cfr_regex\""
                            },
                            {
                                "Key": "name",
                                "Value": "\"test_cfr_regex\""
                            },

                            {
                                "Key": "cookies",
                                "Value": "{\"names\":[],\"regex\":[{\"type\":\"regex\",\"key\":\".+t$\",\"reg\":\"pass(\\\\s+)?\\\\(\",\"restrict\":false,\"mask\":false,\"exclusions\":[],\"id\":\"cfr_regex\"}],\"max_count\":42,\"enable_max_count\":false,\"max_length\":1024,\"enable_max_length\":false}"
                            }
                        ]
                    },
                    "Expected": {
                        "Code": "200",
                        "Type": "json",
                        "Single": true,
                        "SingleResult": [
                            {
                                "Key": "ok",
                                "Value": true
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name":"Test 2: Create security policy ",
            "Skip":false,
            "Steps":[
                {
                    "Name":"Step: User can create security policy with attached content filter profiles",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"security-policy",
                        "Path":""
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-sp\""
                            },
                            {
                                "Key":"map",
                                "Value":"[{\"id\":\"__root_entry__\",\"name\":\"__root__\",\"match\":\"^/(\\\\W.*)?$\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]},{\"id\":\"__default_entry__\",\"name\":\"__default__\",\"match\":\"/\",\"acl_profile\":\"__acldefault__\",\"acl_active\":true,\"backend_id\":\"__default__\",\"cloud_functions\":[],\"content_filter_profile\":\"__defaultcontentfilter__\",\"content_filter_active\":true,\"limit_ids\":[]}, {\"id\": \"test-match\", \"name\": \"test-match\", \"match\": \"/test-match\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test_cfr_match\", \"content_filter_active\": true, \"limit_ids\": []}, {\"id\": \"test-restrict\", \"name\": \"test-restrict\", \"match\": \"/test-restrict\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test_cfr_restrict\", \"content_filter_active\": true, \"limit_ids\": []},{\"id\": \"test-restrict-mask\", \"name\": \"test-restrict-mask\", \"match\": \"/test-restrict-mask\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test_cfr_restrict_mask\", \"content_filter_active\": true, \"limit_ids\": []}, {\"id\": \"test-ignore\", \"name\": \"test-ignore\", \"match\": \"/test-ignore\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test_cfr_ignore\", \"content_filter_active\": true, \"limit_ids\": []}, {\"id\": \"test-ignore-empty\", \"name\": \"test-ignore-empty\", \"match\": \"/test-ignore-empty\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test_cfr_ignore_empty\", \"content_filter_active\": true, \"limit_ids\": []},{\"id\": \"test-regex\", \"name\": \"test-regex\", \"match\": \"/test-regex\", \"acl_profile\": \"__acldefault__\", \"acl_active\": true, \"backend_id\": \"__default__\", \"cloud_functions\": [], \"content_filter_profile\": \"test_cfr_regex\", \"content_filter_active\": true, \"limit_ids\": []}]"

                            }
                        ]
                    },
                    "Expected":{
                        "Code":"200",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"ok",
                                "Value":true
                            }
                        ]
                    }
                },
                {
                    "Name":"Step: Create new server group 'test.site' ",
                    "Skip":false,
                    "GenerateID":false,
                    "API":{
                        "Base":"server-group",
                        "Path":"test-site/"
                    },
                    "Method":"POST",
                    "Payload":{
                        "Params":[
                            {
                                "Key":"id",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"name",
                                "Value":"\"test-site\""
                            },
                            {
                                "Key":"server_names",
                                "Value":"[\"test.site\"]"
                            },
                            {
                                "Key":"security_policy",
                                "Value":"\"test-sp\""
                            }
                        ]
                    },
                    "Expected":{
                        "Code":"201",
                        "Type":"json",
                        "Single":true,
                        "SingleResult":[
                            {
                                "Key":"id",
                                "Value":"test-site"
                            }
                        ]
                    }
                },
                {
                    "ID":"publish-changes",
                    "Skip":false
                },
                {
                    "ID":"wait-for-publish",
                    "Skip":false
                }
            ]
        },
        {
            "Name": "Test 3: Send traffics ",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Send Traffic 1 to 'test-match -b test-match=passthru('",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-match"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "cookie",
                            "Value": "test-match-key=passthru("
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 2 to 'test-match -b foo=passthru('",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-match"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "cookie",
                            "Value": "foo=passthru("
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },

                {
                    "Name": "Step: Send Traffic 3 to `test-restrict -b test=passthru'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-restrict"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "cookie",
                            "Value": "test-restrict-key=passthru"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 4 to '-b test-match-key=passthru'",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-match"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "cookie",
                            "Value": "test-match-key=passthru"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 5 to `-b test-restrict-mask-key=passthru`",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-restrict-mask"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "cookie",
                            "Value": "test-restrict-mask-key=passthru"
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 6 to ` -b test-restrict-mask-key=passthru(`",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-restrict-mask"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "cookie",
                            "Value": "test-restrict-mask-key=passthru("
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 7 to `-b test-ignore-key=passthru(`",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-ignore"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "cookie",
                            "Value": "test-ignore-key=passthru("
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "content",
                        "Single": true,
                        "Text": "b''"
                    }
                },
                {
                    "Name": "Step: Send Traffic 8 to -b test-ignore-empty-key=passthru(",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-ignore-empty"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "cookie",
                            "Value": "test-ignore-empty-key=passthru("
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                },
                {
                    "Name": "Step: Send Traffic 9 to `-b test-regex-key=passthru(`",
                    "Skip": false,
                    "API": {
                        "Base": "send-traffic",
                        "Path": "/test-regex"
                    },
                    "Method": "POST",
                    "Headers": [
                        {
                            "Key": "Host",
                            "Value": "test.site"
                        },
                        {
                            "Key": "cookie",
                            "Value": "test-regex-key=passthru("
                        }
                    ],
                    "Expected": {
                        "Code": "473",
                        "Type": "content",
                        "Single": true,
                        "Text": "b'access denied'"
                    }
                }
            ]
        },
        {
            "Name": "Test 4: Wait for logs",
            "Skip": false,
            "Steps": [
                {
                    "ID": "wait-for-logs",
                    "Skip": false
                }
            ]
        },
        {
            "Name": "Test 5: Check logs from path /test-match",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs from path /test-match",
                    "Skip": false,
                    "API": {
                        "Base": "logs",
                        "Path": ""
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /test-match, status = 473, timestamp between @@NOW(-5minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "Headers": [
                            {
                                "Key": "Server",
                                "Value": "rhino-core-shield"
                            }
                        ],
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "action:content-filter-block"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "contentfiltername:test-cfr-match"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 6: Check logs from path /test-restrict",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs from path /test-restrict",
                    "Skip": false,
                    "API": {
                        "Base": "logs",
                        "Path": ""
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /test-restrict, status = 473, timestamp between @@NOW(-5minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "Headers": [
                            {
                                "Key": "Server",
                                "Value": "rhino-core-shield"
                            }
                        ],
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "action:content-filter-block"
                            },
                            {
                                "Key": "data/results/0/reason",
                                "Value": "Block - restricted restricted[passthru/passthru(\\s+)?\\(] - test_cfr_restrict - [cookie test-restrict-key=passthru]"

                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 7: Check logs from path /test-restrict-mask",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs from path /test-restrict-mask",
                    "Skip": false,
                    "API": {
                        "Base": "logs",
                        "Path": ""
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /test-restrict-mask, status = 473, timestamp between @@NOW(-5minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "Headers": [
                            {
                                "Key": "Server",
                                "Value": "rhino-core-shield"
                            }
                        ],
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "action:content-filter-block"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "contentfiltername:test-cfr-restrict-mask"
                            },
                            {
                                "Key": "data/results/0/cookies/test-restrict-mask-key",
                                "Value": "MASKED{4df8ef1e}"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 8: Check logs from path /test-ignore-empty",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs from path /test-ignore-empty",
                    "Skip": false,
                    "API": {
                        "Base": "logs",
                        "Path": ""
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /test-ignore-empty, status = 473, timestamp between @@NOW(-5minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "Headers": [
                            {
                                "Key": "Server",
                                "Value": "rhino-core-shield"
                            }
                        ],
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "action:content-filter-block"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "contentfiltername:test-cfr-ignore-empty"

                            },
                            {
                                "Key": "data/results/0/reason",
                                "Value": "Block - content filter 100024[lvl5] - test_cfr_ignore_empty - [cookie test-ignore-empty-key=passthru(]"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "Name": "Test 9: Check logs from path /test-regex",
            "Skip": false,
            "Steps": [
                {
                    "Name": "Step: Get Logs from path /test-regex",
                    "Skip": false,
                    "API": {
                        "Base": "logs",
                        "Path": ""
                    },
                    "Method": "GET",
                    "Headers": [
                        {
                            "Key": "syntax",
                            "Value": "string_query"
                        }
                    ],
                    "Arguments": [
                        {
                            "Key": "limit",
                            "Value": "200"
                        },
                        {
                            "Key": "filters",
                            "Value": "path = /test-regex, status = 473, timestamp between @@NOW(-5minutes)@@ and @@NOW(+1minutes)@@, branch=@@branch@@"
                        }
                    ],
                    "Expected": {
                        "Code": "200",
                        "Type": "jsonpath",
                        "Single": true,
                        "Headers": [
                            {
                                "Key": "Server",
                                "Value": "rhino-core-shield"
                            }
                        ],
                        "SingleResult": [
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "status:473"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "action:content-filter-block"
                            },
                            {
                                "Key": "data/results/0/tags/*",
                                "Value": "contentfiltername:test-cfr-regex"
                            },
                            {
                                "Key": "data/results/0/reason",
                                "Value": "Block - content filter 100024[lvl5] - test_cfr_regex - [cookie test-regex-key=passthru(]"
                            }
                        ]
                    }
                }
            ]
        }
    ]
}